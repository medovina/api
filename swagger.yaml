swagger: '2.0'
host: recodex.mff.cuni.cz/api
basePath: /v1
consumes:
  - multipart/form-data
produces:
  - application/json
schemes:
  - https
securityDefinitions:
  WebToken:
    type: apiKey
    in: header
    name: Authorization
  BackendAuth:
    type: basic
info:
  title: 'ReCodEx REST API'
  version: v1.8.0
  description: 'Provides access to user/group management and submission evaluation'
tags:
  -
    name: exercises
    description: 'Endpoints for exercise manipulation'
  -
    name: broker-reports
    description: 'Endpoints used by the backend to notify the frontend of errors and changes in job status'
  -
    name: login
    description: 'Endpoints used to log a user in'
  -
    name: comments
    description: 'Endpoints for comment manipulation'
  -
    name: assignments
    description: 'Endpoints for exercise assignment manipulation'
  -
    name: groups
    description: 'Endpoints for group manipulation'
  -
    name: instances
    description: 'Endpoints for instance manipulation'
  -
    name: reference-exercise-solutions
    description: 'Endpoints for manipulation of reference solutions of exercises'
  -
    name: submissions
    description: 'Endpoints for manipulation of solution submissions'
  -
    name: uploaded-files
    description: 'Endpoints for management of uploaded files'
  -
    name: users
    description: 'User management endpoints'
  -
    name: forgotten-password
    description: 'Endpoints associated with resetting forgotten passwords'
  -
    name: submission-failures
    description: 'Submission failure report viewing and resolution'
  -
    name: runtime-environments
    description: 'Runtime environments endpoints'
  -
    name: hardware-groups
    description: 'Hardware groups endpoints'
  -
    name: job-config
    description: 'Endpoints for job configuration manipulation and validation'
  -
    name: exercise-files
    description: 'Endpoints for exercise files manipulation'
  -
    name: exercises-config
    description: 'Endpoints for exercise configuration manipulation'
  -
    name: submit
    description: 'Endpoints for submitting an assignment'
  -
    name: registration
    description: 'Registration management endpoints'
  -
    name: email-verification
    description: 'Verify user''s email addresses.'
  -
    name: pipelines
    description: 'Endpoints for pipelines manipulation'
  -
    name: sis
    description: ''
  -
    name: assignment-solutions
    description: 'Endpoints for manipulation of solution submissions'
  -
    name: security
    description: ''
paths:
  /login:
    post:
      description: 'Log in using user credentials'
      parameters:
        -
          name: username
          required: false
          type: string
          in: formData
          description: 'User''s E-mail'
          format: email
          minLength: 1
        -
          name: password
          required: false
          type: string
          in: formData
          description: Password
          minLength: 1
      responses:
        200:
          $ref: '#/responses/LoginResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - login
  /login/refresh:
    post:
      description: 'Refresh the access token of current user'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/LoginResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - login
      security:
        -
          WebToken: [ ]
  '/comments/{id}':
    get:
      description: 'Get a comment thread'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the comment thread'
      responses:
        200:
          $ref: '#/responses/CommentThreadResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - comments
      security:
        -
          WebToken: [ ]
    post:
      description: 'Add a comment to a thread'
      parameters:
        -
          name: text
          required: false
          type: string
          in: formData
          description: 'Text of the comment'
          minLength: 1
        -
          name: isPrivate
          required: false
          type: string
          in: formData
          description: 'True if the comment is private'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the comment thread'
      responses:
        200:
          $ref: '#/responses/CommentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - comments
      security:
        -
          WebToken: [ ]
  '/comments/{threadId}/comment/{commentId}/toggle':
    post:
      description: 'Make a private comment public or vice versa'
      parameters:
        -
          name: threadId
          required: true
          in: path
          type: string
          description: 'Identifier of the comment thread'
        -
          name: commentId
          required: true
          in: path
          type: string
          description: 'Identifier of the comment'
      responses:
        200:
          $ref: '#/responses/CommentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - comments
      security:
        -
          WebToken: [ ]
  /broker-reports/error:
    post:
      tags:
        - broker-reports
      description: 'Announce a backend error that is not related to any job (meant to be called by the backend)'
      parameters:
        -
          name: message
          required: false
          type: string
          in: formData
          description: 'A textual description of the error'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          BackendAuth: [ ]
  '/broker-reports/job-status/{jobId}':
    post:
      tags:
        - broker-reports
      description: 'Update the status of a job (meant to be called by the backend)'
      parameters:
        -
          name: status
          required: false
          type: string
          in: formData
          description: 'The new status of the job'
        -
          name: message
          required: false
          type: string
          in: formData
          description: 'A textual explanation of the status change'
        -
          name: jobId
          required: true
          in: path
          type: string
          description: 'Identifier of the job whose status is being reported'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          BackendAuth: [ ]
  /exercises:
    get:
      description: 'Get a list of exercises with an optional filter'
      parameters:
        -
          name: search
          required: false
          in: query
          type: string
          description: 'text which will be searched in exercises names'
      responses:
        200:
          $ref: '#/responses/ExerciseListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - exercises
      security:
        -
          WebToken: [ ]
    post:
      description: "Create exercise with all default values.\nExercise detail can be then changed in appropriate endpoint."
      parameters:
        -
          name: groupId
          in: formData
          required: false
          description: 'Identifier of the group to which exercise belongs to'
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercises/{id}':
    get:
      description: 'Get details of an exercise'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - exercises
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update detail of an exercise'
      parameters:
        -
          name: difficulty
          required: false
          in: formData
          description: 'Difficulty of an exercise, should be one of ''easy'', ''medium'' or ''hard'''
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
        -
          name: isPublic
          in: formData
          required: false
          description: 'Exercise can be public or private'
          type: boolean
        -
          name: version
          in: formData
          required: false
          description: 'Version of the edited exercise'
          type: integer
        -
          name: localizedTexts
          in: formData
          required: false
          description: 'A description of the exercise'
          type: array
          items:
            $ref: '#/definitions/LocalizedExerciseParam'
        -
          name: isLocked
          in: formData
          required: false
          type: boolean
          description: 'If true, the exercise cannot be assigned'
        -
          name: configurationType
          in: formData
          required: false
          type: string
          description: 'Identifies the way the evaluation of the exercise is configured'
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
    delete:
      description: 'Delete an exercise'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  /exercise-assignments:
    get:
      tags:
        - assignments
      description: 'Get a list of all assignments'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/AssignmentListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
    post:
      tags:
        - assignments
      description: 'Assign an exercise to a group'
      parameters:
        -
          name: exerciseId
          required: false
          type: string
          in: formData
          description: 'Identifier of the exercise'
        -
          name: groupId
          required: false
          type: string
          format: uuid
          in: formData
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/AssignmentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}':
    get:
      tags:
        - assignments
      description: 'Get details of an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
      responses:
        200:
          $ref: '#/responses/AssignmentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
    post:
      tags:
        - assignments
      description: 'Update details of an assignment'
      parameters:
        -
          name: isPublic
          required: false
          type: boolean
          in: formData
          description: 'Is the assignment ready to be displayed to students?'
        -
          name: firstDeadline
          required: false
          type: integer
          in: formData
          description: 'First deadline for submission of the assignment'
        -
          name: allowSecondDeadline
          required: false
          type: boolean
          in: formData
          description: 'Should there be a second deadline for students who didn''t make the first one?'
        -
          name: secondDeadline
          required: false
          type: integer
          in: formData
          description: 'A second deadline for submission of the assignment (with different point award)'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the updated assignment'
        -
          name: maxPointsBeforeFirstDeadline
          required: false
          type: integer
          in: formData
          description: 'A maximum of points that can be awarded for a submission before first deadline'
        -
          name: submissionsCountLimit
          required: false
          type: integer
          in: formData
          description: 'A maximum amount of submissions by a student for the assignment'
        -
          name: maxPointsBeforeSecondDeadline
          required: false
          type: integer
          in: formData
          description: 'A maximum of points that can be awarded for a late submission'
        -
          name: localizedTexts
          required: false
          type: array
          items:
            $ref: '#/definitions/LocalizedExerciseParam'
          in: formData
          description: 'A description of the assignment'
        -
          name: canViewLimitRatios
          required: false
          type: boolean
          in: formData
          description: 'Can user view ratio of his solution memory and time usages and assignment limits?'
        -
          name: version
          in: formData
          required: false
          type: integer
          description: 'Version of the edited exercise'
        -
          name: isBonus
          in: formData
          required: false
          type: boolean
          description: 'If set to true then points from this exercise will not be included in overall score of group'
        -
          name: pointsPercentualThreshold
          in: formData
          required: false
          type: integer
          description: 'A minimum percentage of points needed to gain point from assignment'
        -
          name: disabledRuntimeEnvironmentIds
          in: formData
          required: false
          description: 'Identifiers of runtime environments that should not be used for student submissions (only supported for JSON requests)'
      responses:
        200:
          $ref: '#/responses/AssignmentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
    delete:
      tags:
        - assignments
      description: 'Delete an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment to be removed'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}/can-submit':
    get:
      tags:
        - submit
      description: 'Check if the current user can submit solutions to the assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}/users/{userId}/submissions':
    get:
      tags:
        - assignments
      description: 'Get a list of solutions submitted by a user of an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/SubmissionListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}/users/{userId}/best-submission':
    get:
      tags:
        - assignments
      description: 'Get the best solution by a user to an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/SubmissionResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}/submit':
    post:
      tags:
        - submit
      description: 'Submit a solution of an assignment'
      parameters:
        -
          name: note
          required: false
          type: string
          in: formData
          description: 'A private note by the author of the solution'
        -
          name: files
          required: false
          type: array
          items:
            type: string
            format: guid
          in: formData
          description: 'Submitted files'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
        -
          name: userId
          in: formData
          required: false
          description: 'Author of the submission'
        -
          name: runtimeEnvironmentId
          in: formData
          type: string
          format: guid
          required: false
          description: 'Identifier of the runtime environment used for evaluation'
        -
          name: solutionParams
          in: formData
          required: false
          description: 'Solution parameters'
      responses:
        200:
          $ref: '#/responses/AssignmentSubmissionResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  /groups:
    get:
      description: 'Get a list of all non-archived groups'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Create a new group'
      parameters:
        -
          name: instanceId
          required: false
          type: string
          format: guid
          in: formData
          description: 'An identifier of the instance where the group should be created'
          minLength: 36
          maxLength: 36
        -
          name: parentGroupId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of the parent group (if none is given, a top-level group is created)'
          minLength: 36
          maxLength: 36
        -
          name: publicStats
          required: false
          type: boolean
          in: formData
          description: 'Should students be able to see each other''s results?'
        -
          name: isPublic
          required: false
          type: boolean
          in: formData
          description: 'Should the group be visible to all student?'
        -
          name: externalId
          type: string
          in: formData
          required: false
          description: 'An informative, human readable identifier of the group'
        -
          name: localizedTexts
          in: formData
          required: false
          description: 'Localized names and descriptions'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  /groups/validate-add-group-data:
    post:
      description: 'Validate group creation data'
      parameters:
        -
          name: name
          required: false
          type: string
          in: formData
          description: 'Name of the group'
        -
          name: instanceId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of the instance where the group belongs'
        -
          name: parentGroupId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of the parent group'
        -
          name: locale
          in: formData
          required: false
          description: 'The locale of the name'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}':
    get:
      description: 'Get details of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Delete a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update group info'
      parameters:
        -
          name: publicStats
          in: formData
          required: false
          type: boolean
          description: 'Should students be able to see each other''s results?'
        -
          name: isPublic
          in: formData
          required: false
          type: boolean
          description: 'Should the group be visible to all student?'
        -
          name: threshold
          in: formData
          required: false
          type: integer
          description: 'A minimum percentage of points needed to pass the course'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the updated group'
        -
          name: externalId
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'An informative, human readable indentifier of the group'
        -
          name: hasThreshold
          in: formData
          required: false
          type: boolean
          description: 'True if threshold was given, false if it should be unset'
        -
          name: localizedTexts
          in: formData
          required: false
          description: 'Localized names and descriptions'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/groups/{id}/subgroups':
    get:
      description: 'Get a list of subgroups of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/members':
    get:
      description: 'Get a list of members of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/students':
    get:
      description: 'Get a list of students in a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/students/stats':
    get:
      description: "Get statistics of a group. If the user does not have the rights to view all of these, try to at least\nreturn their statistics."
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupStatsResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/students/{userId}':
    get:
      description: 'Get statistics of a single student in a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the student'
      responses:
        200:
          $ref: '#/responses/StudentStatsResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Add a student to a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the student'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Remove a student from a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the student'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/supervisors':
    get:
      description: 'Get a list of supervisors in a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/supervisors/{userId}':
    post:
      description: 'Add a supervisor to a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the supervisor'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Remove a supervisor from a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the supervisor'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/admin':
    get:
      description: 'Get identifiers of administrators of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/AdminIdListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Make a user an administrator of a group'
      parameters:
        -
          name: userId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of a user to be made administrator'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/assignments':
    get:
      description: 'Get all exercise assignments for a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/AssignmentListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  /instances:
    get:
      description: 'Get a list of all instances'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/InstanceListResponse'
      tags:
        - instances
    post:
      description: 'Create a new instance'
      parameters:
        -
          name: isOpen
          required: false
          type: boolean
          in: formData
          description: 'Should the instance be open for registration?'
        -
          name: name
          in: formData
          required: false
          type: string
          minLength: 2
          description: 'Name of the instance'
        -
          name: description
          in: formData
          required: false
          description: 'Description of the instance'
      responses:
        200:
          $ref: '#/responses/InstanceResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}':
    get:
      description: 'Get details of an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/InstanceResponse'
      tags:
        - instances
    delete:
      description: 'Delete an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance to be deleted'
      responses:
        200:
          $ref: '#/responses/DeleteResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update an instance'
      parameters:
        -
          name: name
          required: false
          type: string
          minLength: 2
          in: formData
          description: 'Name of the instance'
        -
          name: description
          required: false
          in: formData
          description: 'Description of the instance'
        -
          name: isOpen
          required: false
          type: boolean
          in: formData
          description: 'Should the instance be open for registration?'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the updated instance'
      responses:
        200:
          $ref: '#/responses/InstanceResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}/groups':
    get:
      description: 'Get a list of all groups which user can view in an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}/users':
    get:
      description: 'Get a list of users registered in an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
        -
          name: search
          required: false
          in: query
          type: string
          description: 'A result filter'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}/licences':
    get:
      description: 'Get a list of licenses associated with an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/LicenceListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
    post:
      description: 'Create a new license for an instance'
      parameters:
        -
          name: note
          required: false
          type: string
          in: formData
          description: 'A note for users or administrators'
          minLength: 2
        -
          name: validUntil
          required: false
          type: integer
          in: formData
          description: 'Expiration date of the license'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/LicenceResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  /submissions:
    get:
      description: 'Get a list of all submissions, ever'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/SubmissionListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - submissions
      security:
        -
          WebToken: [ ]
  '/submissions/{id}':
    get:
      description: 'Get information about the evaluation of a submission'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the submission'
      responses:
        200:
          $ref: '#/responses/SubmissionResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - submissions
      security:
        -
          WebToken: [ ]
    post:
      description: 'Set new amount of bonus points for a submission'
      parameters:
        -
          name: bonusPoints
          in: formData
          required: false
          type: integer
          description: 'New amount of bonus points, can be negative number'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the submission'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submissions
  /uploaded-files:
    post:
      description: 'Upload a file'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/UploadedFileResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  '/uploaded-files/{id}':
    get:
      description: 'Get details of a file'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the uploaded file'
      responses:
        200:
          $ref: '#/responses/UploadedFileResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  '/uploaded-files/{id}/download':
    get:
      description: 'Download a file'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the file'
      responses:
        200:
          $ref: '#/responses/FileDownloadResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  '/uploaded-files/{id}/content':
    get:
      description: 'Get the contents of a file'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the file'
      responses:
        200:
          $ref: '#/responses/FileContentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  /users:
    get:
      description: 'Get a list of all users'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - users
    post:
      description: 'Create a user account'
      parameters:
        -
          name: email
          required: false
          type: string
          in: formData
          description: 'An email that will serve as a login name'
          format: email
        -
          name: firstName
          required: false
          type: string
          in: formData
          description: 'First name'
          minLength: 2
        -
          name: lastName
          required: false
          type: string
          in: formData
          description: 'Last name'
          minLength: 2
        -
          name: password
          required: false
          type: string
          in: formData
          description: 'A password for authentication'
          minLength: 1
        -
          name: instanceId
          required: false
          type: string
          in: formData
          description: 'Identifier of the instance to register in'
          minLength: 1
        -
          name: degreesBeforeName
          required: false
          type: string
          minLength: 1
          in: formData
          description: 'Degrees which is placed before user name'
        -
          name: degreesAfterName
          required: false
          type: string
          minLength: 1
          in: formData
          description: 'Degrees which is placed after user name'
        -
          name: passwordConfirm
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'A password confirmation'
      responses:
        200:
          $ref: '#/responses/UserResponse'
      tags:
        - registration
  /users/ext:
    post:
      description: 'Create an account authenticated with an external service (and link it with either a new user account or an existing one)'
      parameters:
        -
          name: instanceId
          required: false
          type: string
          in: formData
          description: 'Identifier of the instance to register in'
          minLength: 1
        -
          name: serviceId
          required: false
          type: string
          in: formData
          description: 'Identifier of the authentication service'
          minLength: 1
      responses:
        200:
          $ref: '#/responses/UserResponse'
      tags:
        - registration
  /users/validate-registration-data:
    post:
      description: 'Check if the registered E-mail isn''t already used and if the password is strong enough'
      parameters:
        -
          name: email
          required: false
          type: string
          format: email
          in: formData
          description: 'E-mail address (login name)'
        -
          name: password
          required: false
          type: string
          format: password
          in: formData
          description: 'Authentication password'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
      tags:
        - registration
  '/users/{id}':
    get:
      description: 'Get details of a user account'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/UserResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update the profile associated with a user account'
      parameters:
        -
          name: firstName
          in: formData
          required: false
          type: string
          minLength: 2
          description: 'First name'
        -
          name: lastName
          in: formData
          required: false
          type: string
          minLength: 2
          description: 'Last name'
        -
          name: degreesBeforeName
          in: formData
          required: false
          description: 'Degrees before name'
        -
          name: degreesAfterName
          in: formData
          required: false
          description: 'Degrees after name'
        -
          name: oldPassword
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'Old password of current user'
        -
          name: password
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'New password of current user'
        -
          name: email
          in: formData
          required: false
          description: 'New email address'
          type: string
          format: email
        -
          name: passwordConfirm
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'Confirmation of new password of current user'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/UserResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - users
    delete:
      description: 'Delete a user account'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
      tags:
        - users
  '/users/{id}/groups':
    get:
      description: 'Get a list of non-archived groups for a user'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/UserGroupsResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
  '/users/{id}/instances':
    get:
      description: 'Get a list of instances where a user is registered'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/InstanceListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
  '/users/{id}/exercises':
    get:
      description: 'Get a list of exercises authored by a user'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/ExerciseListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
  /forgotten-password:
    post:
      description: 'Request a password reset (user will receive an e-mail that prompts them to reset their password)'
      parameters:
        -
          name: username
          required: false
          type: string
          in: formData
          description: 'An identifier of the user whose password should be reset'
          minLength: 2
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - forgotten-password
  /forgotten-password/change:
    post:
      description: 'Change the user''s password'
      parameters:
        -
          name: password
          required: false
          type: string
          format: password
          in: formData
          description: 'The new password'
          minLength: 2
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - forgotten-password
      security:
        -
          WebToken: [ ]
  /forgotten-password/validate-password-strength:
    post:
      description: 'Check if a password is strong enough'
      parameters:
        -
          name: password
          required: false
          type: string
          format: password
          in: formData
          description: 'The password to be checked'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
      tags:
        - forgotten-password
  '/instances/licences/{licenceId}':
    post:
      description: 'Update an existing license for an instance'
      parameters:
        -
          name: note
          required: false
          type: string
          minLength: 2
          in: formData
          description: 'A note for users or administrators'
        -
          name: validUntil
          required: false
          type: string
          in: formData
          description: 'Expiration date of the license'
        -
          name: isValid
          required: false
          type: boolean
          in: formData
          description: 'Administrator switch to toggle licence validity'
        -
          name: licenceId
          required: true
          in: path
          type: string
          description: 'Identifier of the licence'
      responses:
        200:
          $ref: '#/responses/LicenceResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Remove existing license for an instance'
      parameters:
        -
          name: licenceId
          required: true
          in: path
          type: string
          description: 'Identifier of the licence'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/exercises/{id}/supplementary-files':
    post:
      description: 'Associate supplementary files with an exercise and upload them to remote file server'
      parameters:
        -
          name: files
          required: false
          in: formData
          description: 'Identifiers of supplementary files'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/UploadedFileListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
    get:
      description: 'Get list of all supplementary files for an exercise'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/UploadedFileListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  /submission-failures:
    get:
      description: 'List all submission failures, ever'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/SubmissionFailureListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  /submission-failures/unresolved:
    get:
      description: 'List all unresolved submission failures'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/SubmissionFailureListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/submission-failures/submission/{id}':
    get:
      description: 'List all failures of a single submission'
      parameters:
        -
          name: submissionId
          in: path
          required: true
          type: string
          description: 'An identifier of the submission'
      responses:
        200:
          $ref: '#/responses/SubmissionFailureListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/submission-failures/{id}':
    get:
      description: 'Get details of a failure'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the failure'
      responses:
        200:
          $ref: '#/responses/SubmissionFailureResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/submission-failures/{id}/resolve':
    post:
      description: 'Mark a submission failure as resolved'
      parameters:
        -
          name: note
          in: formData
          required: false
          type: string
          maxLength: 255
          description: 'Brief description of how the failure was resolved'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the failure'
        -
          name: sendEmail
          in: formData
          required: false
          type: boolean
          description: 'True if email should be sent to the author of submission'
      responses:
        200:
          $ref: '#/responses/SubmissionFailureResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/users/{id}/settings':
    post:
      description: 'Update the profile settings'
      parameters:
        -
          name: darkTheme
          in: formData
          required: false
          type: boolean
          description: 'Flag if dark theme is used'
        -
          name: vimMode
          in: formData
          required: false
          type: boolean
          description: 'Flag if vim keybinding is used'
        -
          name: defaultLanguage
          in: formData
          required: false
          type: string
          description: 'Default language of UI'
        -
          name: openedSidebar
          in: formData
          required: false
          type: boolean
          description: 'Flag if the sidebar of the web-app should be opened by default.'
        -
          name: newAssignmentEmails
          in: formData
          required: false
          type: boolean
          description: 'Flag if email should be sent to user when new assignment was created'
        -
          name: assignmentDeadlineEmails
          in: formData
          required: false
          type: boolean
          description: 'Flag if email should be sent to user if assignment deadline is nearby'
        -
          name: submissionEvaluatedEmails
          in: formData
          required: false
          type: boolean
          description: 'Flag if email should be sent to user when resubmission was evaluated'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/UserResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - users
  /runtime-environments:
    get:
      description: 'Get a list of all runtime environments'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/RuntimeEnvironmentListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - runtime-environments
  '/exercises/{id}/validate':
    post:
      description: 'Check if the version of the exercise is up-to-date.'
      parameters:
        -
          name: version
          in: formData
          required: false
          type: integer
          description: 'Version of the exercise.'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200:
          $ref: '#/responses/ValidationResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercises/{id}/fork':
    post:
      description: 'Fork exercise from given one into the completely new one.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: groupId
          in: formData
          required: false
          description: 'Identifier of the group to which exercise will be forked'
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercise-assignments/{id}/validate':
    post:
      description: 'Check if the version of the assignment is up-to-date.'
      parameters:
        -
          name: version
          in: formData
          required: false
          type: integer
          description: 'Version of the assignment.'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the assignment'
      responses:
        200:
          $ref: '#/responses/ValidationResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignments
  '/submissions/{id}/download-result':
    get:
      description: 'Download result archive from backend for particular submission.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/FileDownloadResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submissions
  /hardware-groups:
    get:
      description: 'Get a list of all hardware groups in system'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/HardwareGroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - hardware-groups
  /job-config/validate:
    post:
      description: 'Validate low-level job configuration in YAML and return list of error messages'
      parameters:
        -
          name: jobConfig
          in: formData
          required: false
          type: string
          description: 'Job configuration YAML'
      responses:
        200:
          $ref: '#/responses/PlainTextResponse'
      tags:
        - job-config
  '/exercises/{id}/additional-files':
    post:
      description: 'Associate additional exercise files with an exercise'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
        -
          name: files
          in: formData
          required: false
          type: array
          items:
            type: string
            format: guid
          description: 'Identifiers of additional files'
      responses:
        200:
          $ref: '#/responses/UploadedFileListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
    get:
      description: 'Get a list of all additional files for an exercise'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/UploadedFileListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  '/reference-solutions/exercise/{exerciseId}':
    get:
      description: 'Get reference solutions for an exercise'
      parameters:
        -
          name: exerciseId
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200:
          $ref: '#/responses/ReferenceSolutionListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
    post:
      description: 'Add new reference solution to an exercise'
      parameters:
        -
          name: note
          in: formData
          required: false
          type: string
          description: 'Description of this particular reference solution, for example used algorithm'
        -
          name: files
          in: formData
          required: false
          description: 'Files of the reference solution'
        -
          name: exerciseId
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: runtimeEnvironmentId
          in: formData
          required: false
          description: 'ID of runtime for this solution'
      responses:
        200:
          $ref: '#/responses/ReferenceSolutionResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
  '/reference-solutions/exercise/{exerciseId}/evaluate':
    post:
      description: 'Evaluate all reference solutions for an exercise (and for all configured hardware groups).'
      parameters:
        -
          name: exerciseId
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: debug
          in: formData
          required: false
          type: boolean
          description: ''
      responses:
        200:
          $ref: '#/responses/ExerciseReferenceSolutionEvaluationsReponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
  '/reference-solutions/{id}/evaluate':
    post:
      description: 'Evaluate a single reference exercise solution for all configured hardware groups'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the reference solution'
        -
          name: debug
          in: formData
          required: false
          type: boolean
          description: ''
      responses:
        200:
          $ref: '#/responses/ReferenceSolutionEvaluationsReponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
  '/reference-solutions/evaluation/{evaluationId}/download-result':
    get:
      description: 'Download result archive from backend for a reference solution evaluation'
      parameters:
        -
          name: evaluationId
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/FileDownloadResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
  '/submissions/{id}/set-accepted':
    post:
      description: 'Set submission of student as accepted, this submission will be then presented as the best one.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identifier of the submission'
      responses:
        200:
          $ref: '#/responses/StudentStatsResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submissions
  '/login/takeover/{userId}':
    post:
      description: 'Takeover user account with specified user identification.'
      parameters:
        -
          name: userId
          in: path
          required: true
          description: ''
      responses:
        200:
          $ref: '#/responses/LoginResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - login
  '/login/{serviceId}[/{type}]':
    post:
      description: 'Log in using an external authentication service'
      parameters:
        -
          name: serviceId
          in: path
          required: true
          type: string
          description: 'Identifier of the login service'
        -
          name: type
          in: path
          required: true
          type: string
          description: 'Type of the authentication process'
      responses:
        200:
          $ref: '#/responses/LoginResponse'
      tags:
        - login
  '/exercises/{id}/pipelines':
    get:
      description: 'Get all pipelines for an exercise.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200:
          $ref: '#/responses/PipelineListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercises/{id}/supplementary-files/{fileId}':
    delete:
      description: 'Delete supplementary exercise file with given id'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
        -
          name: fileId
          in: path
          required: true
          type: string
          description: 'identification of file'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  '/exercises/{id}/additional-files/{fileId}':
    delete:
      description: 'Delete additional exercise file with given id'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
        -
          name: fileId
          in: path
          required: true
          type: string
          description: 'identification of file'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  '/exercises/{id}/environment-configs':
    get:
      description: 'Get runtime configurations for exercise.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
    post:
      description: "Change runtime configuration of exercise.\nConfigurations can be added or deleted here, based on what is provided in arguments."
      parameters:
        -
          name: environmentConfigs
          in: formData
          required: false
          description: 'Environment configurations for the exercise'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
  '/exercises/{id}/config':
    get:
      description: 'Get a basic exercise high level configuration.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
    post:
      description: 'Set basic exercise configuration'
      parameters:
        -
          name: config
          in: formData
          required: false
          description: 'A list of basic high level exercise configuration'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
  '/exercises/{id}/config/variables':
    post:
      description: "Get variables for exercise configuration which are derived from given\npipelines and runtime environment."
      parameters:
        -
          name: runtimeEnvironmentId
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'Environment identifier'
        -
          name: pipelinesIds
          in: formData
          required: false
          description: 'Identifiers of selected pipelines for one test'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
  '/exercises/{id}/environment/{runtimeEnvironmentId}/limits':
    get:
      description: 'Get a description of resource limits for an exercise.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: runtimeEnvironmentId
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/LimitsResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
    post:
      description: 'Set resource limits for an exercise.'
      parameters:
        -
          name: limits
          in: formData
          required: false
          description: 'A list of resource limits for the given environment'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: runtimeEnvironmentId
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/LimitsResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
  '/exercises/{id}/environment/{runtimeEnvironmentId}/hwgroup/{hwGroupId}/limits':
    get:
      description: 'Get a description of resource limits for an exercise for given hwgroup'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: runtimeEnvironmentId
          in: path
          required: true
          type: string
          description: ''
        -
          name: hwGroupId
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/LimitsResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
    post:
      description: 'Set resource limits for an exercise for given hwgroup.'
      parameters:
        -
          name: limits
          in: formData
          required: false
          description: 'A list of resource limits for the given environment and hardware group'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: runtimeEnvironmentId
          in: path
          required: true
          type: string
          description: ''
        -
          name: hwGroupId
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/LimitsResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
    delete:
      description: 'Remove resource limits of given hwgroup from an exercise.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: runtimeEnvironmentId
          in: path
          required: true
          type: string
          description: ''
        -
          name: hwGroupId
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
  '/exercises/{id}/score-config':
    get:
      description: 'Get score configuration for exercise based on given identification.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
    post:
      description: 'Set score configuration for exercise.'
      parameters:
        -
          name: scoreConfig
          in: formData
          required: false
          type: string
          description: 'A configuration of the score calculator (the exact format depends on the calculator assigned to the exercise)'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
  '/exercise-assignments/{id}/best-submissions':
    get:
      description: 'Get the best solutions to an assignment for all students in group.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the assignment'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignments
  '/exercise-assignments/{id}/sync-exercise':
    post:
      description: 'Update the assignment so that it matches with the current version of the exercise (limits, texts, etc.)'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise that should be synchronized'
      responses:
        200:
          $ref: '#/responses/AssignmentResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignments
  '/exercise-assignments/{id}/resubmit-all':
    post:
      description: 'Resubmit all submissions to an assignment'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the assignment'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submit
  '/groups/{id}/public':
    get:
      description: 'Get public data about group.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/groups/{id}/admin/{userId}':
    delete:
      description: 'Remove user as an administrator of a group'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          in: path
          required: true
          type: string
          description: 'identifier of admin'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/groups/{id}/exercises':
    get:
      description: 'Get all exercises for a group'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/ExerciseListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/instances/{id}/groups/public':
    get:
      description: 'Get a list of all public groups in an instance.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
      tags:
        - instances
  '/reference-solutions/evaluation/{evaluationId}':
    get:
      description: 'Get reference solution evaluation for an exercise solution.'
      parameters:
        -
          name: evaluationId
          in: path
          required: true
          type: string
          description: 'identifier of the reference exercise evaluation'
      responses:
        200: {  }
      tags:
        - reference-exercise-solutions
  '/reference-solutions/{solutionId}':
    delete:
      description: 'Delete reference solution with given identification.'
      parameters:
        -
          name: solutionId
          in: path
          required: true
          type: string
          description: 'identifier of reference solution'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
      tags:
        - reference-exercise-solutions
  '/reference-solutions/{solutionId}/evaluations':
    get:
      description: 'Get reference solution evaluations for an exercise solution.'
      parameters:
        -
          name: solutionId
          in: path
          required: true
          type: string
          description: 'identifier of the reference exercise solution'
      responses:
        200:
          $ref: '#/responses/ReferenceSolutionEvaluationsReponse'
      tags:
        - reference-exercise-solutions
  '/submissions/{id}/unset-accepted':
    delete:
      description: 'Set submission of student as unaccepted if it was.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identifier of the submission'
      responses:
        200:
          $ref: '#/responses/StudentStatsResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submissions
  '/submissions/{id}/resubmit':
    post:
      description: 'Resubmit a submission (for example in case of broker failure)'
      parameters:
        -
          name: private
          in: formData
          required: false
          type: boolean
          description: ''
        -
          name: debug
          in: formData
          required: false
          type: boolean
          description: ''
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the submission'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submit
  '/uploaded-files/supplementary-file/{id}/download':
    get:
      description: 'Download supplementary file'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the file'
      responses:
        200:
          $ref: '#/responses/FileDownloadResponse'
      tags:
        - uploaded-files
  '/users/{id}/public':
    get:
      description: 'Get public data about user.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        200: {  }
      tags:
        - users
  /email-verification/verify:
    post:
      description: 'Verify users email.'
      parameters: [ ]
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - email-verification
  /email-verification/resend:
    post:
      description: 'Resend the email for the current user to verify his/her email address.'
      parameters: [ ]
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - email-verification
  /pipelines/boxes:
    get:
      description: 'Get a list of default boxes which might be used in pipeline.'
      parameters: [ ]
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
  /pipelines:
    get:
      description: 'Get a list of pipelines with an optional filter'
      parameters:
        -
          name: search
          in: query
          required: false
          type: string
          description: 'text which will be searched in pipeline names'
      responses:
        200:
          $ref: '#/responses/PipelineListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
    post:
      description: 'Create pipeline.'
      parameters:
        -
          name: exerciseId
          in: formData
          required: false
          description: 'Exercise identification'
      responses:
        200:
          $ref: '#/responses/PipelineResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
  '/pipelines/{id}/fork':
    post:
      description: "Fork pipeline, if exercise identification is given pipeline is forked\nto specified exercise."
      parameters:
        -
          name: exerciseId
          in: formData
          required: false
          description: 'Exercise identification'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of pipeline'
      responses:
        200:
          $ref: '#/responses/PipelineResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
  '/pipelines/{id}':
    get:
      description: 'Get pipeline based on given identification.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the pipeline'
      responses:
        200:
          $ref: '#/responses/PipelineResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
    post:
      description: 'Update pipeline with given data.'
      parameters:
        -
          name: name
          in: formData
          required: false
          type: string
          minLength: 2
          description: 'Name of the pipeline'
        -
          name: version
          in: formData
          required: false
          type: integer
          description: 'Version of the edited pipeline'
        -
          name: description
          in: formData
          required: false
          description: 'Human readable description of pipeline'
        -
          name: pipeline
          in: formData
          required: false
          description: 'Pipeline configuration'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the pipeline'
        -
          name: parameters
          in: formData
          required: false
          description: 'A set of parameters'
      responses:
        200:
          $ref: '#/responses/PipelineResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
    delete:
      description: 'Delete an pipeline'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
  '/pipelines/{id}/validate':
    post:
      description: 'Check if the version of the pipeline is up-to-date.'
      parameters:
        -
          name: version
          in: formData
          required: false
          type: integer
          description: 'Version of the pipeline.'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the pipeline'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
  '/pipelines/{id}/supplementary-files':
    get:
      description: 'Get list of all supplementary files for a pipeline'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of pipeline'
      responses:
        200:
          $ref: '#/responses/UploadedFileListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
    post:
      description: 'Associate supplementary files with a pipeline and upload them to remote file server'
      parameters:
        -
          name: files
          in: formData
          required: false
          description: 'Identifiers of supplementary files'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of pipeline'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - pipelines
  /extensions/sis/status/:
    get:
      description: ''
      parameters: [ ]
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  /extensions/sis/terms/:
    post:
      description: 'Register a new term'
      parameters:
        -
          name: year
          in: formData
          required: false
          description: ''
        -
          name: term
          in: formData
          required: false
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
    get:
      description: 'Get a list of all registered SIS terms'
      parameters: [ ]
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  '/extensions/sis/users/{userId}/subscribed-groups/{year}/{term}/as-student':
    get:
      description: 'Get ReCodEx group bound to SIS groups of which the user is a student'
      parameters:
        -
          name: userId
          in: path
          required: true
          description: ''
        -
          name: year
          in: path
          required: true
          description: ''
        -
          name: term
          in: path
          required: true
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  '/extensions/sis/users/{userId}/supervised-courses/{year}/{term}':
    get:
      description: 'Get SIS groups of which the user is a supervisor (regardless of them being bound to a local group)'
      parameters:
        -
          name: userId
          in: path
          required: true
          description: ''
        -
          name: year
          in: path
          required: true
          description: ''
        -
          name: term
          in: path
          required: true
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  '/extensions/sis/remote-courses/{courseId}/possible-parents':
    get:
      description: 'Find groups that can be chosen as parents of a group created from given SIS group by current user'
      parameters:
        -
          name: courseId
          in: path
          required: true
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  '/extensions/sis/remote-courses/{courseId}/create':
    post:
      description: 'Create a new group based on a SIS group'
      parameters:
        -
          name: parentGroupId
          in: formData
          required: false
          description: ''
        -
          name: courseId
          in: path
          required: true
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  '/extensions/sis/remote-courses/{courseId}/bind':
    post:
      description: 'Bind an existing local group to a SIS group'
      parameters:
        -
          name: groupId
          in: formData
          required: false
          description: ''
        -
          name: courseId
          in: path
          required: true
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  '/exercises/{id}/hardware-groups':
    post:
      description: 'Set hardware groups which are associated with exercise.'
      parameters:
        -
          name: hwGroups
          in: formData
          required: false
          description: 'List of hardware groups identifications to which exercise belongs to'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identifier of exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercises/{id}/supplementary-files/download-archive':
    get:
      description: 'Download archive containing all supplementary files for exercise.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'of exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  '/exercises/{id}/attachment-files':
    get:
      description: 'Get a list of all attachment files for an exercise'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
    post:
      description: 'Associate attachment exercise files with an exercise'
      parameters:
        -
          name: files
          in: formData
          required: false
          description: 'Identifiers of attachment files'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  '/exercises/{id}/attachment-files/{fileId}':
    delete:
      description: 'Delete attachment exercise file with given id'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
        -
          name: fileId
          in: path
          required: true
          type: string
          description: 'identification of file'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  '/exercises/{id}/attachment-files/download-archive':
    get:
      description: 'Download archive containing all attachment files for exercise.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'of exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercise-files
  '/exercises/{id}/tests':
    get:
      description: 'Get tests for exercise based on given identification.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
    post:
      description: 'Set tests for exercise based on given identification.'
      parameters:
        -
          name: tests
          in: formData
          required: false
          description: 'An array of tests which will belong to exercise'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises-config
  '/exercise-assignments/{id}/best-solutions':
    get:
      description: 'Get the best solutions to an assignment for all students in group.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the assignment'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignments
  '/exercise-assignments/{id}/users/{userId}/solutions':
    get:
      description: 'Get a list of solutions created by a user of an assignment'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the assignment'
        -
          name: userId
          in: path
          required: true
          type: string
          description: 'Identifier of the user'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignments
  '/exercise-assignments/{id}/users/{userId}/best-solution':
    get:
      description: 'Get the best solution by a user to an assignment'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the assignment'
        -
          name: userId
          in: path
          required: true
          type: string
          description: 'Identifier of the user'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignments
  /groups/all:
    get:
      description: 'Get a list of all groups'
      parameters: [ ]
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/groups/{id}/organizational':
    post:
      description: 'Set the ''isOrganizational'' flag for a group'
      parameters:
        -
          name: value
          in: formData
          required: true
          type: boolean
          description: 'The value of the flag'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the updated group'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/groups/{id}/archived':
    post:
      description: 'Set the ''isArchived'' flag for a group'
      parameters:
        -
          name: value
          in: formData
          required: true
          type: boolean
          description: 'The value of the flag'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the updated group'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/reference-solutions/{solutionId}/download-solution':
    get:
      description: 'Download archive containing all solution files for particular reference solution.'
      parameters:
        -
          name: solutionId
          in: path
          required: true
          type: string
          description: 'of reference solution'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - reference-exercise-solutions
  '/assignment-solutions/evaluation/{id}':
    get:
      description: 'Get information about the evaluation of a submission'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the submission'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/assignment-solutions/evaluation/{id}/download-result':
    get:
      description: 'Download result archive from backend for particular submission.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/assignment-solutions/{id}':
    get:
      description: 'Get information about solutions.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the solution'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
    delete:
      description: 'Delete assignment solution with given identification.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identifier of assignment solution'
      responses:
        200: {  }
        401: {  }
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/assignment-solutions/{id}/bonus-points':
    post:
      description: 'Set new amount of bonus points for a solution'
      parameters:
        -
          name: bonusPoints
          in: formData
          required: false
          type: integer
          description: 'New amount of bonus points, can be negative number'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the submission'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/assignment-solutions/{id}/evaluations':
    get:
      description: 'Get information about the evaluations of a solution'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the solution'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/assignment-solutions/{id}/set-accepted':
    post:
      description: 'Set solution of student as accepted, this solution will be then presented as the best one.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identifier of the submission'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/assignment-solutions/{id}/unset-accepted':
    delete:
      description: 'Set solution of student as unaccepted if it was.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identifier of the submission'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/assignment-solutions/{id}/resubmit':
    post:
      description: 'Resubmit a submission (for example in case of broker failure)'
      parameters:
        -
          name: debug
          in: formData
          required: false
          type: boolean
          description: ''
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the submission'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submit
  '/assignment-solutions/{id}/download-solution':
    get:
      description: 'Download archive containing all solution files for particular solution.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'of assignment solution'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - assignment-solutions
  '/users/{id}/groups/all':
    get:
      description: 'Get a list of all groups for a user'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the user'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
  '/users/{id}/create-local':
    post:
      description: "If user is registered externally, add local account as another login method.\nCreated password is empty and has to be changed in order to use it."
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: ''
      responses:
        200: {  }
      tags:
        - users
  '/extensions/sis/terms/{id}':
    post:
      description: 'Set details of a term'
      parameters:
        -
          name: beginning
          in: formData
          required: false
          type: integer
          description: ''
        -
          name: end
          in: formData
          required: false
          type: integer
          description: ''
        -
          name: advertiseUntil
          in: formData
          required: false
          type: integer
          description: ''
        -
          name: id
          in: path
          required: true
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
    delete:
      description: 'Delete a term'
      parameters:
        -
          name: id
          in: path
          required: true
          description: ''
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - sis
  /security/check:
    post:
      description: ''
      parameters:
        -
          name: url
          in: formData
          required: true
          description: 'URL of the resource that we are checking'
        -
          name: method
          in: formData
          required: true
          description: 'The HTTP method'
      responses:
        200: {  }
      tags:
        - security
  /login/issue-restricted-token:
    post:
      description: 'Issue a new access token with a restricted set of scopes'
      parameters:
        -
          name: scopes
          in: formData
          required: false
          description: 'A list of requested scopes'
        -
          name: expiration
          in: formData
          required: false
          type: integer
          description: 'How long the token should be valid (in seconds)'
      responses:
        200: {  }
        401: {  }
      security:
        -
          WebToken: [ ]
      tags:
        - login
  '/comments/{threadId}/comment/{commentId}':
    delete:
      description: 'Delete a comment'
      parameters:
        -
          name: threadId
          in: path
          required: true
          type: string
          description: 'Identifier of the comment thread'
        -
          name: commentId
          in: path
          required: true
          type: string
          description: 'Identifier of the comment'
      responses:
        200: {  }
        401: {  }
      security:
        -
          WebToken: [ ]
      tags:
        - comments
  '/exercises/{id}/groups/{groupId}':
    post:
      description: 'Attach exercise to group with given identification.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: groupId
          in: path
          required: true
          type: string
          description: 'Identifier of the group to which exercise should be attached'
      responses:
        200: {  }
        401: {  }
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
    delete:
      description: 'Detach exercise from given group.'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
        -
          name: groupId
          in: path
          required: true
          type: string
          description: 'Identifier of the group which should be detached from exercise'
      responses:
        200: {  }
        401: {  }
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercise-assignments/{id}/pre-submit':
    post:
      description: "Pre submit action which will, based on given files, detect possible runtime\nenvironments for the assignment. Also it can be further used for entry\npoints and other important things that should be provided by user during\nsubmit."
      parameters:
        -
          name: files
          in: formData
          required: false
          description: ''
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identifier of assignment'
      responses:
        200: {  }
        401: {  }
      security:
        -
          WebToken: [ ]
      tags:
        - submit
  '/reference-solutions/exercise/{exerciseId}/pre-submit':
    post:
      description: "Pre submit action which will, based on given files, detect possible runtime\nenvironments for the exercise. Also it can be further used for entry\npoints and other important things that should be provided by user during\nsubmit."
      parameters:
        -
          name: files
          in: formData
          required: false
          description: ''
        -
          name: exerciseId
          in: path
          required: true
          type: string
          description: 'identifier of exercise'
      responses:
        200: {  }
      tags:
        - reference-exercise-solutions
  '/reference-solutions/exercise/{exerciseId}/submit':
    post:
      description: 'Add new reference solution to an exercise'
      parameters:
        -
          name: note
          in: formData
          required: false
          type: string
          description: 'Description of this particular reference solution, for example used algorithm'
        -
          name: files
          in: formData
          required: false
          description: 'Files of the reference solution'
        -
          name: runtimeEnvironmentId
          in: formData
          required: false
          description: 'ID of runtime for this solution'
        -
          name: solutionParams
          in: formData
          required: false
          description: 'Solution parameters'
        -
          name: exerciseId
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
      tags:
        - reference-exercise-solutions
  '/reference-solutions/exercise/{exerciseId}/resubmit-all':
    post:
      description: 'Evaluate all reference solutions for an exercise (and for all configured hardware groups).'
      parameters:
        -
          name: debug
          in: formData
          required: false
          type: boolean
          description: ''
        -
          name: exerciseId
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
      tags:
        - reference-exercise-solutions
  '/reference-solutions/{id}/resubmit':
    post:
      description: 'Evaluate a single reference exercise solution for all configured hardware groups'
      parameters:
        -
          name: debug
          in: formData
          required: false
          type: boolean
          description: ''
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the reference solution'
      responses:
        200: {  }
      tags:
        - reference-exercise-solutions
  '/users/{id}/invalidate-tokens':
    post:
      description: 'Invalidate all existing tokens issued for given user'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the user'
      responses:
        200: {  }
      tags:
        - users
responses:
  BooleanResponse:
    description: 'A boolean value'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: boolean
              example: true
  InstanceResponse:
    description: 'An instance object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Instance'
  InstanceListResponse:
    description: 'A list of instances'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Instance'
  LicenceResponse:
    description: 'A licence object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Licence'
  LicenceListResponse:
    description: 'A list of licences'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Licence'
  UserResponse:
    description: 'Details of a user'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/User'
  UserListResponse:
    description: 'A list of users'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/User'
  GroupResponse:
    description: 'A group object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Group'
  GroupListResponse:
    description: 'A list of groups'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Group'
  ExerciseResponse:
    description: 'An exercise object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Exercise'
  ExerciseListResponse:
    description: 'A list of exercises'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Exercise'
  AssignmentListResponse:
    description: 'A list of assignments'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Assignment'
  AssignmentResponse:
    description: 'An assignment object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Assignment'
  CommentResponse:
    description: 'A comment object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Comment'
  CommentThreadResponse:
    description: 'A comment thread object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/CommentThread'
  SubmissionResponse:
    description: 'A submission object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Submission'
  SubmissionListResponse:
    description: 'A list of submissions'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Submission'
  AssignmentSubmissionResponse:
    description: 'Information about submission'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                webSocketChannel:
                  type: object
                  properties: { id: { type: string }, monitorUrl: { type: string }, expectedTasksCount: { type: integer, example: 42 } }
                submission:
                  $ref: '#/definitions/Submission'
  UploadedFileResponse:
    description: 'An uploaded file object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/SolutionFile'
  UploadedFileListResponse:
    description: 'A list of uploaded file objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/SolutionFile'
  HardwareGroupListResponse:
    description: 'A list of hardware group objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/HardwareGroup'
  LoginResponse:
    description: 'Access token and user information'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                accessToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
                user:
                  $ref: '#/definitions/User'
  FileDownloadResponse:
    description: 'A file download'
    schema:
      type: file
  PlainTextResponse:
    description: 'Plain text'
    schema:
      type: text
  GroupStatsResponse:
    description: 'List of statistics for each student'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/StudentStatisticsData'
  StudentStatsResponse:
    description: 'Statistics for a single student'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/StudentStatisticsData'
  AdminIdListResponse:
    description: 'A list of user identifiers'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                type: string
                format: guid
                example: 3A584DA0-564D-4E65-8284-DBA43566B03A
  ReferenceSolutionListResponse:
    description: 'A list of reference solutions'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/ReferenceExerciseSolution'
  ReferenceSolutionResponse:
    description: 'A reference solution object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/ReferenceExerciseSolution'
  SubmissionFailureResponse:
    description: 'A submission failure object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/SubmissionFailure'
  SubmissionFailureListResponse:
    description: 'A list of submission failure objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/SubmissionFailure'
  PipelineResponse:
    description: 'A pipeline object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Pipeline'
  PipelineListResponse:
    description: 'A list of pipeline objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Pipeline'
  UserSettingsResponse:
    description: 'User settings object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/UserSettings'
  RuntimeEnvironmentListResponse:
    description: 'A list of runtime environment objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/RuntimeEnvironment'
  LimitsResponse:
    description: 'A list of resource limits'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            environments:
              type: array
              items:
                type: object
                properties: {  }
  SuccessResponse:
    description: Success
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: string
              example: OK
  DeleteResponse:
    description: OK
    schema:
      type: object
      properties:
        code:
          type: integer
          required: true
        success:
          type: boolean
          required: true
        payload:
          type: string
          example: OK
  UnauthorizedResponse:
    description: 'Login required'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            msg:
              type: string
      example:
        msg: 'Forbidden Request - Login required'
        code: 401
        success: false
  ForbiddenResponse:
    description: 'Forbidden Request - Access denied'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            msg:
              type: string
      example:
        msg: 'Forbidden Request - Access denied'
        code: 403
        success: false
  BadRequestResponse:
    description: 'Bad Request'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            msg:
              type: string
      example:
        msg: 'Bad Request - Missing required POST field'
        code: 400
        success: false
  ValidationResponse:
    description: 'Validation results'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                versionIsUpToDate:
                  type: boolean
                  example: false
  UserGroupsResponse:
    description: 'Group data for a user'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                student:
                  type: array
                  items: { $ref: '#/definitions/Group' }
                supervisor:
                  type: array
                  items: { $ref: '#/definitions/Group' }
                stats:
                  type: array
                  items: { $ref: '#/definitions/GroupStats' }
  ReferenceSolutionEvaluationsReponse:
    description: 'Details of an evaluation of a reference solution'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                referenceSolution:
                  $ref: '#/definitions/ReferenceExerciseSolution'
                evaluations:
                  type: array
                  items: { $ref: '#/definitions/ReferenceSolutionEvaluation' }
                errors:
                  type: array
                  items: { description: 'Hardware group identifiers', type: string }
  ExerciseReferenceSolutionEvaluationsReponse:
    description: 'Details of evaluation of all reference solutions to an exercise'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                type: object
                properties:
                  referenceSolution: { $ref: '#/definitions/ReferenceExerciseSolution' }
                  evaluations: { type: array, items: { $ref: '#/definitions/ReferenceSolutionEvaluation' } }
                  errors: { type: array, items: { description: 'Hardware group identifiers', type: string } }
  FileContentResponse:
    description: 'Content of a file'
    schema:
      type: object
      properties:
        content:
          type: string
          example: 'Content of the file, lorem ipsum'
        malformedCharacters:
          type: boolean
          example: false
        tooLarge:
          type: boolean
          example: false
definitions:
  DefaultResponseParams:
    type: object
    properties:
      code:
        type: integer
        example: 200
      success:
        type: boolean
        example: true
  Assignment:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: A9317DB7-306B-4B14-9793-04C2D8E8E400
      name:
        type: string
        example: 'Convex hull'
      isPublic:
        type: boolean
        example: true
      groupId:
        $ref: '#/definitions/Group/properties/id'
      deadline:
        type: object
        properties:
          first:
            type: integer
            example: 1530195253
          second:
            type: integer
            example: 1627097523
      submissionsCountLimit:
        type: integer
        example: 50
      canReceiveSubmissions:
        type: boolean
        example: false
      allowSecondDeadline:
        type: boolean
        example: false
      maxPoints:
        type: object
        properties:
          first:
            type: integer
            example: 0
          second:
            type: integer
            example: 0
      firstDeadline:
        type: integer
        example: 1593075555
      secondDeadline:
        type: integer
        example: 1679262320
      maxPointsBeforeFirstDeadline:
        type: integer
        example: 0
      maxPointsBeforeSecondDeadline:
        type: integer
        example: 0
      solutionRuntimeConfigs:
        type: array
        items:
          type: string
          example: D9FAB341-4562-459B-868A-C5872D2DE0BF
      canViewLimitRatios:
        type: boolean
        example: false
      version:
        type: integer
        example: 1
      localizedTexts:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 02DF77E0-FF13-44B7-8C0C-35295836EC0A
            locale:
              type: string
              example: en
            text:
              type: string
              example: ''
            createdAt:
              type: integer
              example: 1523822493
            createdFrom:
              type: string
              example: ''
            name:
              type: string
              example: 'Convex hull'
            shortText:
              type: string
              example: 'Convex hull'
            description:
              type: string
              example: ''
      runtimeEnvironmentsIds:
        type: array
        items:
          type: string
          example: c-gcc-linux
      isBonus:
        type: boolean
        example: false
      pointsPercentualThreshold:
        type: double
        example: !!float 0
      createdAt:
        type: integer
        example: 1523822493
      updatedAt:
        type: integer
        example: 1523822493
      exerciseSynchronizationInfo:
        type: object
        properties:
          exerciseConfig:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          scoreConfig:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          scoreCalculator:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          exerciseEnvironmentConfigs:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          hardwareGroups:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          localizedTexts:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          limits:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          isSynchronizationPossible:
            type: boolean
            example: true
          updatedAt:
            type: object
            properties:
              assignment:
                type: integer
                example: 1523822493
              exercise:
                type: integer
                example: 1523822493
          configurationType:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          exerciseTests:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          supplementaryFiles:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          attachmentFiles:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
          runtimeEnvironments:
            type: object
            properties:
              upToDate:
                type: boolean
                example: true
      exerciseId:
        type: string
        example: D054CB1E-6A34-4BA6-8C35-6283866F5145
      runtimeEnvironmentIds:
        type: array
        items:
          type: string
          example: c-gcc-linux
      disabledRuntimeEnvironmentIds:
        type: array
        items: {  }
  Group:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: BF66743D-1768-40B0-9C3F-7103D140F8FE
      name:
        type: string
        example: 'Frankenstein University, Atlantida'
      description:
        type: string
        example: 'First underwater IT university for fish and shrimps.'
      adminId:
        type: string
        format: guid
        example: E6E6F998-51A8-495C-907B-A9706A56B562
      admins:
        type: array
        items:
          type: string
          format: guid
          example: E6E6F998-51A8-495C-907B-A9706A56B562
      supervisors:
        type: array
        items:
          type: string
          format: guid
          example: E6E6F998-51A8-495C-907B-A9706A56B562
      students:
        type: array
        items:
          type: string
          format: guid
          example: E737BDDD-C5EA-46E6-8358-4712B6E6BF25
      instanceId:
        type: string
        format: guid
        example: BE668416-7A5E-4D6A-A296-20D51E6BC888
      hasValidLicence:
        type: boolean
        example: true
      parentGroupId:
        type: string
        format: guid
        example: 0cf3b440-5531-3122-b091-4de13f15652d
      assignments:
        type: object
        items:
          type: string
          format: guid
          example: 3E2A7CE3-AA73-4D32-9B7A-66C7E97AC401
        properties:
          all:
            type: array
            items:
              type: string
              example: 62D87D5E-7D81-46D4-9D0C-3C1E6C0C722D
          public:
            type: array
            items:
              type: string
              example: 62D87D5E-7D81-46D4-9D0C-3C1E6C0C722D
      publicStats:
        type: boolean
        example: false
      isPublic:
        type: boolean
        example: true
      childGroups:
        type: object
        items:
          type: string
          example: B2160429-C3C9-42D5-A026-00BB5ADF3FB5
        properties:
          all:
            type: array
            items:
              type: string
              example: 1A867E09-46A7-4A44-A9A1-22140392FF41
          public:
            type: array
            items:
              type: string
              example: 1A867E09-46A7-4A44-A9A1-22140392FF41
      threshold:
        type: float
        example: 0.75
      externalId:
        type: string
        example: ''
      primaryAdminsIds:
        type: array
        items:
          type: string
          example: 1A867E09-46A7-4A44-A9A1-22140392FF41
      parentGroupsIds:
        type: array
        items:
          type: string
          example: 1A867E09-46A7-4A44-A9A1-22140392FF41
  Instance:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: 63E5284A-BDFB-436A-894D-63D8EA869885
      name:
        type: string
        example: 'Frankenstein University, Atlantida'
      description:
        type: string
        example: 'First underwater IT university for fish and shrimps.'
      hasValidLicence:
        type: boolean
        example: true
      isOpen:
        type: boolean
        example: true
      createdAt:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1523822492
      updatedAt:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1523822492
      isAllowed:
        type: boolean
        example: true
      admin:
        type: string
        format: guid
        example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
      topLevelGroups:
        type: array
        items:
          type: string
          example: 336B1872-7B09-4A43-A5C0-2E2749F8E9F3
      deletedAt:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1479893977
      rootGroupId:
        type: string
        example: F0DD9F6A-A0BA-4A36-9814-5780CFD24E8D
  Licence:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: 948EB026-F660-41A6-AD3D-C7B3048607F9
      note:
        type: string
        example: 'Year licence for the first Fish University'
      isValid:
        type: boolean
        example: true
      validUntil:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1591562973
  User:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: 28FB1D10-66C7-4ABB-A8E9-96086718AFFE
      fullName:
        type: string
        example: 'Admin Admin'
      name:
        type: object
        properties:
          degreesBeforeName:
            type: string
            example: ''
          firstName:
            type: string
            example: Admin
          lastName:
            type: string
            example: Admin
          degreesAfterName:
            type: string
            example: ''
      instanceId:
        type: string
        format: guid
        example: BE668416-7A5E-4D6A-A296-20D51E6BC888
      avatarUrl:
        type: string
        example: 'https://secure.gravatar.com/avatar/64e1b8d34f425d19e1ee2ea7236d3028.png?s=200&amp;d=retro&amp;r=g'
      isVerified:
        description: 'Is the user verified by email?'
        type: boolean
        example: false
      role:
        type: string
        format: guid
        example: superadmin
      groups:
        type: object
        properties:
          studentOf:
            type: array
            items:
              type: string
              example: aa07c86a-df37-327b-8bd9-b97fdfd66161
          supervisorOf:
            type: array
            items:
              type: string
              example: 32D3D459-F0EA-4C49-B3DC-FB4D5CE3AD3C
      settings:
        type: object
        properties:
          darkTheme:
            type: boolean
            example: true
          vimMode:
            type: boolean
            example: false
          defaultLanguage:
            type: string
            example: en
          openedSidebar:
            type: boolean
            example: true
          newAssignmentEmails:
            type: boolean
            example: true
          assignmentDeadlineEmails:
            type: boolean
            example: true
          submissionEvaluatedEmails:
            type: boolean
            example: true
      email:
        type: string
        example: admin@admin.com
      isExternal:
        type: boolean
        example: false
  Exercise:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: D054CB1E-6A34-4BA6-8C35-6283866F5145
      name:
        type: string
        example: 'Convex hull'
      version:
        type: integer
        example: 1
      authorId:
        type: string
        format: guid
        example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
      forkedFrom:
        type: string
        format: guid
        example: ed6eef24-6b1f-3781-b9d3-625d82830ec1
      description:
        type: string
        example: ''
      difficulty:
        type: string
        example: moderate
      isPublic:
        type: boolean
        example: true
      createdAt:
        type: integer
        example: 1523822493
      updatedAt:
        type: integer
        example: 1523822493
      localizedTexts:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 02DF77E0-FF13-44B7-8C0C-35295836EC0A
            locale:
              type: string
              example: en
            text:
              type: string
              example: ''
            createdAt:
              type: integer
              example: 1523822493
            createdFrom:
              type: string
              example: ''
            name:
              type: string
              example: 'Convex hull'
            shortText:
              type: string
              example: 'Convex hull'
            description:
              type: string
              example: ''
      runtimeConfigs:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 2A9D62F7-DC5B-4E11-9C6E-F671E44E6F29
            name:
              type: string
              example: 'A demo runtime config'
            createdAt:
              type: integer
              example: 1491913711
            jobConfig:
              type: boolean
              example: false
            isValid:
              type: boolean
              example: false
            runtimeEnvironmentId:
              type: string
              example: c-gcc-linux
            createdFrom:
              type: string
              example: ''
      additionalFiles:
        type: array
        items:
          type: string
          example: 2A9D62F7-DC5B-4E11-9C6E-F671E44E6F29
      runtimeEnvironments:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: c-gcc-linux
            name:
              type: string
              example: 'C (GCC)'
            language:
              type: string
              example: C
            extensions:
              type: string
              example: '[c, h]'
            platform:
              type: string
              example: GNU/Linux
            description:
              type: string
              example: 'C compiled with GCC'
            defaultVariables:
              type: array
              items:
                type: object
                properties:
                  name: { type: string, example: source-files }
                  type: { type: string, example: 'file[]' }
                  value: { type: string, example: '*.{c,h}' }
            longName:
              type: string
              example: C
      hardwareGroups:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: group1
            description:
              type: string
              example: 'Our only hardware group'
            isAvailable:
              type: boolean
              example: false
            name:
              type: string
              example: 'Name of the group1'
            metadata:
              type: object
              properties:
                memory:
                  type: integer
                  example: 1048576
                cpuTimePerTest:
                  type: integer
                  example: 60
                cpuTimePerExercise:
                  type: integer
                  example: 300
                wallTimePerTest:
                  type: integer
                  example: 60
                wallTimePerExercise:
                  type: integer
                  example: 300
      groupsIds:
        type: array
        items:
          type: string
          example: 2A9D62F7-DC5B-4E11-9C6E-F671E44E6F29
      isLocked:
        type: boolean
        example: false
      supplementaryFilesIds:
        type: array
        items:
          type: string
          example: 2A9D62F7-DC5B-4E11-9C6E-F671E44E6F29
      additionalExerciseFilesIds:
        type: array
        items:
          type: string
          example: D5409FA3-F791-4076-861B-59BA630CC407
      attachmentFilesIds:
        type: array
        items:
          type: string
          example: 9352AFB3-465F-4E11-A03F-F62971E13136
      configurationType:
        type: string
        example: simpleExerciseConfig
      isBroken:
        type: boolean
        example: false
      validationError:
        type: string
        example: 'Score configuration looks broken'
  Role:
    type: string
    example: student
  Resource:
    type: string
    example: assignments
  Permission:
    type: object
    properties:
      role:
        type: string
        format: guid
        example: superadmin
      resource:
        type: string
        format: guid
        example: assignments
      action:
        type: string
        example: '*'
      isAllowed:
        type: integer
        example: 1
  LocalizedExerciseParam:
    type: object
    properties:
      locale:
        type: string
        example: en_US
      name:
        type: string
        example: 'Your assignment'
      text:
        type: string
        example: 'This is your assignment!'
      description:
        type: string
        example: 'This is a private note from the author of the assignment!'
  CommentThread:
    type: object
    properties:
      id:
        type: string
        example: mainThread
      comments:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 31B694F1-6AF4-428C-B8B5-6072830BB2B9
            commentThreadId:
              type: string
              example: mainThread
            user:
              type: object
              properties:
                id:
                  type: string
                  example: 690EED7E-B502-47B1-BC45-6E3AB1166CA9
                name:
                  type: string
                  example: 'Harmony Erdman'
                avatarUrl:
                  type: string
                  example: 'https://secure.gravatar.com/avatar/111d68d06e2d317b5a59c2c6c5bad808.png?s=200&amp;d=retro&amp;r=g'
            postedAt:
              type: integer
              example: 1523822493
            isPrivate:
              type: boolean
              example: true
            text:
              type: string
              example: 'comment text'
  Comment:
    type: object
    properties:
      id:
        type: string
        example: 31B694F1-6AF4-428C-B8B5-6072830BB2B9
      commentThreadId:
        type: string
        example: mainThread
      user:
        type: object
        properties:
          id:
            type: string
            example: 690EED7E-B502-47B1-BC45-6E3AB1166CA9
          name:
            type: string
            example: 'Harmony Erdman'
          avatarUrl:
            type: string
            example: 'https://secure.gravatar.com/avatar/111d68d06e2d317b5a59c2c6c5bad808.png?s=200&amp;d=retro&amp;r=g'
      postedAt:
        type: integer
        example: 1523822493
      isPrivate:
        type: boolean
        example: true
      text:
        type: string
        example: 'comment text'
  RuntimeEnvironment:
    type: object
    properties:
      id:
        type: string
        example: c-gcc-linux
      name:
        type: string
        example: 'C (GCC)'
      language:
        type: string
        example: C
      extensions:
        type: string
        example: '[c, h]'
      platform:
        type: string
        example: GNU/Linux
      description:
        type: string
        example: 'C compiled with GCC'
      defaultVariables:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              example: source-files
            type:
              type: string
              example: 'file[]'
            value:
              type: string
              example: '*.{c,h}'
      longName:
        type: string
        example: C
  HardwareGroup:
    type: object
    properties:
      id:
        type: string
        example: group1
      description:
        type: string
        example: 'Our only hardware group'
      isAvailable:
        type: boolean
        example: false
      name:
        type: string
        example: 'Name of the group1'
      metadata:
        type: object
        properties:
          memory:
            type: integer
            example: 1048576
          cpuTimePerTest:
            type: integer
            example: 60
          cpuTimePerExercise:
            type: integer
            example: 300
          wallTimePerTest:
            type: integer
            example: 60
          wallTimePerExercise:
            type: integer
            example: 300
  SolutionRuntimeConfig:
    type: object
    properties:
      id:
        type: string
        example: D9FAB341-4562-459B-868A-C5872D2DE0BF
      name:
        type: string
        example: 'A demo runtime config'
      hardwareGroup:
        type: string
        example: dd2a7c4f-68ed-3b61-85ae-13dd1de31671
      runtimeEnvironment:
        type: object
        properties:
          id:
            type: string
            example: c-gcc-linux
          name:
            type: string
            example: 'C (GCC)'
          language:
            type: string
            example: C
          extensions:
            type: string
            example: '[c, h]'
          platform:
            type: string
            example: GNU/Linux
          description:
            type: string
            example: 'C compiled with GCC'
      jobConfig:
        type: boolean
        example: false
      createdAt:
        type: integer
        example: 1479915729
      runtimeEnvironmentId:
        type: string
        example: c-gcc-linux
  Submission:
    type: object
    properties:
      id:
        type: string
        example: EC22035C-A97D-42BC-B44D-F17CBF3A2ECA
      userId:
        type: string
        example: 72CE6AB6-C806-4426-A0E1-B8B6EC567D0D
      note:
        type: string
        example: 'Random note'
      exerciseAssignmentId:
        type: string
        example: 9B07CD1C-5A92-4A05-A86B-BE85B0407635
      submittedAt:
        type: integer
        example: 1509899373
      evaluationStatus:
        type: string
        example: evaluation-failed
      evaluation:
        type: object
        example: 69f0f87c-3158-3a33-941f-e4b1ec4a0a93
        properties:
          id:
            type: string
            example: E9C4531F-E549-448F-834A-2434A76608CB
          evaluatedAt:
            type: integer
            example: 1172740723
          score:
            type: double
            example: 0.95
          points:
            type: integer
            example: 10
          bonusPoints:
            type: integer
            example: 1
          initFailed:
            type: boolean
            example: false
          isValid:
            type: boolean
            example: true
          isCorrect:
            type: boolean
            example: true
          evaluationFailed:
            type: boolean
            example: false
          testResults:
            type: array
            items: {  }
          initiationOutputs:
            type: string
            example: ''
      maxPoints:
        type: integer
        example: 0
      files:
        type: array
        items:
          type: object
          example: 69f0f87c-3158-3a33-941f-e4b1ec4a0a93
          properties:
            id:
              type: string
              example: 108EAE1F-BFFE-45EF-B994-4B2FAB3AB174
            name:
              type: string
              example: filename.ext
            size:
              type: integer
              example: 0
            uploadedAt:
              type: integer
              example: 822507616
            userId:
              type: string
              example: 72CE6AB6-C806-4426-A0E1-B8B6EC567D0D
            isPublic:
              type: boolean
              example: false
      submittedBy:
        type: string
        example: 72CE6AB6-C806-4426-A0E1-B8B6EC567D0D
      accepted:
        type: boolean
        example: false
      isCorrect:
        type: boolean
        example: true
      runtimeEnvironmentId:
        type: string
        example: c-gcc-linux
      originalSubmissionId:
        type: string
        example: BC2B4B65-0557-4E9B-90B9-1C7FA65559CD
  SolutionEvaluation:
    type: object
    properties:
      id:
        type: string
        example: 35FE3A2A-1AF9-4259-8DDB-7CCA46A94BCE
      evaluatedAt:
        type: integer
        example: 705724975
      score:
        type: double
        example: 0.95
      points:
        type: integer
        example: 10
      bonusPoints:
        type: integer
        example: 1
      initFailed:
        type: boolean
        example: false
      isValid:
        type: boolean
        example: true
      isCorrect:
        type: boolean
        example: true
      evaluationFailed:
        type: boolean
        example: false
      testResults:
        type: array
        items: {  }
      initiationOutputs:
        type: string
        example: ''
  Solution:
    type: object
    properties:
      id:
        type: string
        example: A2FC9E00-7C82-45EB-B00B-8D8C09794925
      userId:
        type: string
        example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
      files:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 8F3935F3-265A-4084-A404-B9D4CF054766
            name:
              type: string
              example: filename.ext
            size:
              type: integer
              example: 0
            uploadedAt:
              type: integer
              example: 1296968863
            userId:
              type: string
              example: 03158369-EE1C-4935-A110-16689F167368
      createdAt:
        type: integer
        example: 1523822493
  SolutionFile:
    type: object
    properties:
      id:
        type: string
        example: 44D4E9DD-DE07-4A7B-97B0-B6959B342834
      name:
        type: string
        example: filename.ext
      size:
        type: integer
        example: 0
      uploadedAt:
        type: integer
        example: 365262088
      userId:
        type: string
        example: 36086602-211C-42B2-9F76-A70308A735F8
      isPublic:
        type: boolean
        example: false
  SubmissionFailure:
    type: object
    properties:
      type:
        type: string
        example: evaluation_failure
      description:
        type: string
        example: 'Things went south'
      submission:
        type: string
        example: EC22035C-A97D-42BC-B44D-F17CBF3A2ECA
      createdAt:
        type: integer
        example: 1172740723
      resolvedAt:
        type: integer
        example: 1523822493
      resolutionNote:
        type: string
        example: 'Got it!'
      id:
        type: string
        example: 4E09F4F9-E29A-41E9-A88D-6FD35517C6E2
      assignmentSolutionId:
        type: string
        example: 79EB8FC9-6782-4136-A93C-DFE9887B862C
      assignmentId:
        type: string
        example: A9317DB7-306B-4B14-9793-04C2D8E8E400
      referenceSolutionId:
        type: string
        example: EAA5A64B-CF95-42D1-A860-78701D59250A
      exerciseId:
        type: string
        example: EAA5A64B-CF95-42D1-A860-78701D59250A
  StudentStatisticsData:
    type: object
    properties:
      userId:
        type: string
        example: 3A584DA0-564D-4E65-8284-DBA43566B03A
      groupId:
        type: string
        example: 3A584DA0-564D-4E65-8284-DBA43566B03A
      assignments:
        type: object
        properties:
          total:
            type: integer
            example: 10
          completed:
            type: integer
            example: 3
          missed:
            type: integer
            example: 7
      points:
        type: object
        properties:
          total:
            type: integer
            example: 42
          received:
            type: integer
            example: 12
      statuses:
        type: object
        example:
          3A584DA0-564D-4E65-8284-DBA43566B03A: done
          FB584DA0-564D-4E65-8284-DBA43566B03A: failed
      hasLimit:
        type: boolean
        example: false
      passesLimit:
        type: boolean
        example: false
  ReferenceExerciseSolution:
    type: object
    properties:
      id:
        type: string
        example: C3F388B6-B90F-407B-A432-993EAA7E514D
      uploadedAt:
        type: integer
        example: 1509899373
      description:
        type: string
        example: 'Brute force solution'
      solution:
        type: object
        properties:
          id:
            type: string
            example: A2FC9E00-7C82-45EB-B00B-8D8C09794925
          userId:
            type: string
            example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
          files:
            type: array
            items:
              type: string
              example: F019B9EF-4216-4806-9729-2C7D97A20549
          createdAt:
            type: integer
            example: 1523822493
      evaluations:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: C20AE2E6-06CB-4F82-BAB1-0AFC5658EC21
            referenceSolutionId:
              type: string
              example: 8711F7E9-A13C-42FA-800E-A54911D514C6
            evaluationStatus:
              type: string
              example: evaluation-failed
            evaluation:
              type: string
              example: 3684A998-4274-4F3D-B7A0-2FC31D5F1486
      runtimeEnvironmentId:
        type: string
        example: c-gcc-linux
      submissions:
        type: array
        items:
          type: string
          example: 47F92E4E-F88C-4937-8451-76185BD90630
  ReferenceSolutionEvaluation:
    type: object
    properties:
      id:
        type: string
        example: 45D69CD9-3353-4810-8C96-8DD2DB738CCE
      evaluationStatus:
        type: string
        example: done
      evaluation:
        type: object
        example: 3684A998-4274-4F3D-B7A0-2FC31D5F1486
        properties:
          id:
            type: string
            example: EF24A34F-9618-4D83-97CA-4A9B2B2748A9
          evaluatedAt:
            type: integer
            example: 715548875
          score:
            type: double
            example: 0.95
          points:
            type: integer
            example: 10
          bonusPoints:
            type: integer
            example: 10
          initFailed:
            type: boolean
            example: false
          initiationOutputs:
            type: string
            example: ''
          testResults:
            type: array
            items: {  }
      referenceSolution:
        type: object
        properties:
          id:
            type: string
            example: 324A9176-B962-4780-B67B-FC2FA757CD5D
          uploadedAt:
            type: integer
            example: 1491913711
          description:
            type: string
            example: 'Brute force solution'
          solution:
            type: object
            properties:
              id:
                type: string
                example: A7CBC568-DE82-43EA-BDD7-30BAAF18A392
              userId:
                type: string
                example: 90B9949A-2AFA-4D62-A662-840DB6B79AF4
              files:
                type: array
                items:
                  type: string
                  example: 90B9949A-2AFA-4D62-A662-840DB6B79AF4
          evaluations:
            type: array
            items:
              type: string
              example: C820F6E0-5973-416D-BF57-BC97D3BAF8AB
      referenceSolutionId:
        type: string
        example: 851758BB-0E69-4441-AF4E-F6C239E88197
      isCorrect:
        type: boolean
        example: true
  GroupMembership:
    type: object
    properties:
      id:
        type: string
        example: 85EEEC38-6E2B-4C85-9704-40139D77B604
      userId:
        type: string
        example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
      groupId:
        type: string
        example: 35F14B2A-9577-4E0C-9C07-1E2B70C84BAF
      status:
        type: string
        example: active
      requestedAt:
        type: integer
        example: 1479915729
      joinedAt:
        type: integer
        example: 1523822493
      rejectedAt:
        type: integer
        example: 1479915729
      studentSince:
        type: integer
        example: 1479915729
      supervisorSince:
        type: integer
        example: 1523822493
  UserSettings:
    type: object
    properties:
      darkTheme:
        type: boolean
        example: true
      vimMode:
        type: boolean
        example: false
      defaultLanguage:
        type: string
        example: en
      openedSidebar:
        type: boolean
        example: true
      newAssignmentEmails:
        type: boolean
        example: true
      assignmentDeadlineEmails:
        type: boolean
        example: true
      submissionEvaluatedEmails:
        type: boolean
        example: true
  RuntimeConfig:
    type: object
    properties:
      id:
        type: string
        example: 2A9D62F7-DC5B-4E11-9C6E-F671E44E6F29
      name:
        type: string
        example: 'A demo runtime config'
      createdAt:
        type: integer
        example: 1491913711
      jobConfig:
        type: boolean
        example: false
      isValid:
        type: boolean
        example: false
      runtimeEnvironmentId:
        type: string
        example: c-gcc-linux
      createdFrom:
        type: string
        example: ''
  GroupStats:
    type: object
    properties:
      userId:
        type: string
        example: B50BB5F4-132A-4E42-9441-A8D15471D8DB
      groupId:
        type: string
        example: B50BB5F4-132A-4E42-9441-A8D15471D8DB
      assignments:
        type: object
        properties:
          total:
            type: integer
          completed:
            type: integer
          missed:
            type: integer
      points:
        type: object
        properties:
          total:
            type: integer
          gained:
            type: integer
      statuses:
        type: object
      hasLimit:
        type: boolean
      passesLimit:
        type: boolean
  AdditionalExerciseFile:
    type: object
    properties:
      id:
        type: string
        example: D5409FA3-F791-4076-861B-59BA630CC407
      name:
        type: string
        example: 'Our additional file'
      size:
        type: integer
        example: 42
      uploadedAt:
        type: integer
        example: 1420263124
      userId:
        type: string
        example: 28FB1D10-66C7-4ABB-A8E9-96086718AFFE
      isPublic:
        type: boolean
        example: true
  LocalizedExercise:
    type: object
    properties:
      id:
        type: string
        example: 030842CE-F6C2-46A9-B15B-EEB89539F7FF
      locale:
        type: string
        example: en
      name:
        type: string
        example: 'A true classic'
      shortText:
        type: string
        example: 'A true classic'
      text:
        type: string
        example: 'Extensive assignment description'
      description:
        type: string
        example: 'Description for teachers'
      createdAt:
        type: integer
        example: 1523822492
      createdFrom:
        type: string
        example: ''
  ExerciseLimits:
    type: object
    properties:
      id:
        type: string
        example: E3D19FCA-E244-4053-92CD-60D1E45125C0
      runtimeConfigId:
        type: string
        example: c-gcc-linux
      hardwareGroupId:
        type: string
        example: group1
      limits:
        type: string
        example: "test-id-1:\n  wall-time: 5\n  memory: 50\n  parallel: 500"
      createdAt:
        type: integer
        example: 1523822493
      createdFrom:
        type: string
        example: ''
  Pipeline:
    type: object
    properties:
      id:
        type: string
        example: FFCF276A-7F7F-4137-BC8C-276A043D17FA
      name:
        type: string
        example: compilationPipeline
      version:
        type: integer
        example: 1
      createdAt:
        type: integer
        example: 1523822492
      updatedAt:
        type: integer
        example: 1523822492
      description:
        type: string
        example: ''
      author:
        type: string
        example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
      exerciseId:
        type: string
        example: 95EBCA48-ED94-4F02-88C0-62E343D4CD48
      supplementaryFilesIds:
        type: array
        items:
          type: string
          example: 95EBCA48-ED94-4F02-88C0-62E343D4CD48
      pipeline:
        type: object
        properties:
          variables:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  example: source-files
                type:
                  type: string
                  example: 'file[]'
                value:
                  type: array
                  items: { type: string, example: source.cpp }
          boxes:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  example: source
                type:
                  type: string
                  example: file-in
                portsIn:
                  type: array
                  items: {  }
                portsOut:
                  type: object
                  properties: { input: { type: object, properties: { type: { type: string, example: file }, value: { type: string, example: source-files } } } }
      parameters:
        type: object
        properties:
          isCompilationPipeline:
            type: boolean
            example: false
          isExecutionPipeline:
            type: boolean
            example: false
          producesStdout:
            type: boolean
            example: false
          producesFiles:
            type: boolean
            example: false
          hasEntryPoint:
            type: boolean
            example: false
      runtimeEnvironmentIds:
        type: array
        items: {  }
  AssignmentSolutionSubmission:
    type: object
    properties:
      id:
        type: string
        example: AD005194-6DB2-482E-BBCF-6D1E8DC3AE48
      assignmentSolutionId:
        type: string
        example: 43854E25-5F34-481A-8C99-4F25FCF638E6
      evaluationStatus:
        type: string
        example: evaluation-failed
      isCorrect:
        type: boolean
        example: true
      evaluation:
        type: object
        properties:
          id:
            type: string
            example: 464CEEBF-983F-4899-BADE-515AA6EA4136
          evaluatedAt:
            type: integer
            example: 254447594
          score:
            type: double
            example: 0.95
          points:
            type: integer
            example: 10
          initFailed:
            type: boolean
            example: false
          initiationOutputs:
            type: string
            example: ''
          testResults:
            type: array
            items: {  }
      submittedAt:
        type: integer
        example: 1519723273
      submittedBy:
        type: string
        example: 59602C73-DD57-4891-97EF-D34CC787D4B4
  AttachmentFile:
    type: object
    properties:
      id:
        type: string
        example: 9352AFB3-465F-4E11-A03F-F62971E13136
      name:
        type: string
        example: 'Our additional file'
      size:
        type: integer
        example: 42
      uploadedAt:
        type: integer
        example: 1434186244
      userId:
        type: string
        example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
      isPublic:
        type: boolean
        example: true
  ReferenceSolutionSubmission:
    type: object
    properties:
      id:
        type: string
        example: 47F92E4E-F88C-4937-8451-76185BD90630
      referenceSolutionId:
        type: string
        example: C3F388B6-B90F-407B-A432-993EAA7E514D
      evaluationStatus:
        type: string
        example: done
      isCorrect:
        type: boolean
        example: true
      evaluation:
        type: object
        properties:
          id:
            type: string
            example: 1B45FB0F-EFCB-46E8-8AFE-A9D09AB50E60
          evaluatedAt:
            type: integer
            example: 701625755
          score:
            type: double
            example: 0.95
          points:
            type: integer
            example: 10
          initFailed:
            type: boolean
            example: false
          initiationOutputs:
            type: string
            example: ''
          testResults:
            type: array
            items: {  }
      submittedAt:
        type: integer
        example: 1523822493
      submittedBy:
        type: string
        example: 7CF9960F-CE76-4A18-A50F-EE311F613F57
  LocalizedGroup:
    type: object
    properties:
      id:
        type: string
        example: 4E3C3377-AE13-4658-BCA0-2277AB906335
      locale:
        type: string
        example: en
      name:
        type: string
        example: 'Frankenstein University, Atlantida'
      description:
        type: string
        example: 'First underwater IT university for fish and shrimps.'
      createdAt:
        type: integer
        example: 1523822492
      createdFrom:
        type: string
        example: ''
  ExerciseTest:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: 'Test 1'
      description:
        type: string
        example: 'Description of Test 1'
