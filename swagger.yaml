swagger: '2.0'
host: 'recodex.projekty.ms.mff.cuni.cz:4000'
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
securityDefinitions:
  WebToken:
    type: apiKey
    in: header
    name: Authorization
  BackendAuth:
    type: basic
info:
  title: 'ReCodEx REST API'
  version: v1
  description: 'Provides access to user/group management and submission evaluation'
tags:
  -
    name: exercises
    description: 'Endpoints for exercise manipulation'
  -
    name: broker-reports
    description: 'Endpoints used by the backend to notify the frontend of errors and changes in job status'
  -
    name: login
    description: 'Endpoints used to log a user in'
  -
    name: comments
    description: 'Endpoints for comment manipulation'
  -
    name: assignments
    description: 'Endpoints for exercise assignment manipulation'
  -
    name: groups
    description: 'Endpoints for group manipulation'
  -
    name: instances
    description: 'Endpoints for instance manipulation'
  -
    name: reference-exercise-solutions
    description: 'Endpoints for manipulation of reference solutions of exercises'
  -
    name: submissions
    description: 'Endpoints for manipulation of solution submissions'
  -
    name: uploaded-files
    description: 'Endpoints for management of uploaded files'
  -
    name: users
    description: 'User management endpoints'
  -
    name: forgotten-password
    description: 'Endpoints associated with resetting forgotten passwords'
  -
    name: submission-failures
    description: 'Submission failure report viewing and resolution'
  -
    name: runtime-environments
    description: 'Runtime environments endpoints'
paths:
  /login:
    post:
      description: 'Log in using user credentials'
      parameters:
        -
          name: username
          required: false
          type: string
          in: formData
          description: 'User''s E-mail'
          format: email
        -
          name: password
          required: false
          type: string
          in: formData
          description: Password
      responses:
        200:
          $ref: '#/responses/LoginResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - login
  /login/refresh:
    post:
      description: 'Refresh the access token of current user'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/LoginResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - login
      security:
        -
          WebToken: [ ]
  '/login/{serviceId}':
    post:
      description: 'Log in using an external authentication service'
      parameters:
        -
          name: username
          required: false
          type: string
          in: formData
          description: 'User name'
        -
          name: password
          required: false
          type: string
          in: formData
          description: Password
        -
          name: serviceId
          required: true
          in: path
          type: string
          description: 'Identifier of the login service'
      responses:
        200:
          $ref: '#/responses/LoginResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - login
  '/comments/{id}':
    get:
      description: 'Get a comment thread'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the comment thread'
      responses:
        200:
          $ref: '#/responses/CommentThreadResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - comments
      security:
        -
          WebToken: [ ]
    post:
      description: 'Add a comment to a thread'
      parameters:
        -
          name: text
          required: false
          type: string
          in: formData
          description: 'Text of the comment'
          minLength: 1
        -
          name: isPrivate
          required: false
          type: string
          in: formData
          description: 'True if the comment is private'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the comment thread'
      responses:
        200:
          $ref: '#/responses/CommentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - comments
      security:
        -
          WebToken: [ ]
  '/comments/{threadId}/comment/{commentId}/toggle':
    post:
      description: 'Make a private comment public or vice versa'
      parameters:
        -
          name: threadId
          required: true
          in: path
          type: string
          description: 'Identifier of the comment thread'
        -
          name: commentId
          required: true
          in: path
          type: string
          description: 'Identifier of the comment'
      responses:
        200:
          $ref: '#/responses/CommentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - comments
      security:
        -
          WebToken: [ ]
  /broker-reports/error:
    post:
      tags:
        - broker-reports
      description: 'Announce a backend error that is not related to any job (meant to be called by the backend)'
      parameters:
        -
          name: message
          required: false
          type: string
          in: formData
          description: 'A textual description of the error'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          BackendAuth: [ ]
  '/broker-reports/job-status/{jobId}':
    post:
      tags:
        - broker-reports
      description: 'Update the status of a job (meant to be called by the backend)'
      parameters:
        -
          name: status
          required: false
          type: string
          in: formData
          description: 'The new status of the job'
        -
          name: message
          required: false
          type: string
          in: formData
          description: 'A textual explanation of the status change'
        -
          name: jobId
          required: true
          in: path
          type: string
          description: 'Identifier of the job whose status is being reported'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          BackendAuth: [ ]
  /exercises:
    get:
      description: 'Get a list of exercises with an optional filter'
      parameters:
        -
          name: search
          required: false
          in: query
          type: string
          description: 'text which will be searched in exercises names'
      responses:
        200:
          $ref: '#/responses/ExerciseListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - exercises
      security:
        -
          WebToken: [ ]
    post:
      description: "Create exercise with all default values.\nExercise detail can be then changed in appropriate endpoint."
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercises/{id}':
    get:
      description: 'Get details of an exercise'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - exercises
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update detail of an exercise'
      parameters:
        -
          name: name
          required: false
          in: formData
          description: 'Name of exercise'
        -
          name: difficulty
          required: false
          in: formData
          description: 'Difficulty of an exercise, should be one of ''easy'', ''medium'' or ''hard'''
        -
          name: localizedAssignments
          required: false
          in: formData
          description: 'A description of the exercise'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
        -
          name: isPublic
          in: formData
          required: false
          description: 'Exercise can be public or private'
          type: boolean
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  /exercise-assignments:
    get:
      tags:
        - assignments
      description: 'Get a list of all assignments'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/AssignmentListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
    post:
      tags:
        - assignments
      description: 'Assign an exercise to a group'
      parameters:
        -
          name: exerciseId
          required: false
          type: string
          in: formData
          description: 'Identifier of the exercise'
        -
          name: groupId
          required: false
          type: string
          format: uuid
          in: formData
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/AssignmentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}':
    get:
      tags:
        - assignments
      description: 'Get details of an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
      responses:
        200:
          $ref: '#/responses/AssignmentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
    post:
      tags:
        - assignments
      description: 'Update details of an assignment'
      parameters:
        -
          name: name
          required: false
          type: string
          in: formData
          description: 'Name of the assignment'
          minLength: 2
        -
          name: isPublic
          required: false
          type: boolean
          in: formData
          description: 'Is the assignment ready to be displayed to students?'
        -
          name: description
          required: false
          type: string
          in: formData
          description: 'A description of the assignment'
        -
          name: firstDeadline
          required: false
          type: integer
          in: formData
          description: 'First deadline for submission of the assignment'
        -
          name: scoreConfig
          required: false
          type: string
          in: formData
          description: 'A configuration of the score calculator (the exact format depends on the calculator assigned to the exercise)'
        -
          name: allowSecondDeadline
          required: false
          type: boolean
          in: formData
          description: 'Should there be a second deadline for students who didn''t make the first one?'
        -
          name: secondDeadline
          required: false
          type: integer
          in: formData
          description: 'A second deadline for submission of the assignment (with different point award)'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the updated assignment'
        -
          name: maxPointsBeforeFirstDeadline
          required: false
          type: integer
          in: formData
          description: 'A maximum of points that can be awarded for a submission before first deadline'
        -
          name: submissionsCountLimit
          required: false
          type: integer
          in: formData
          description: 'A maximum amount of submissions by a student for the assignment'
        -
          name: maxPointsBeforeSecondDeadline
          required: false
          type: integer
          in: formData
          description: 'A maximum of points that can be awarded for a late submission'
        -
          name: localizedAssignments
          required: false
          type: array
          items:
            $ref: '#/definitions/LocalizedAssignmentParam'
          in: formData
          description: 'A description of the assignment'
        -
          name: canViewLimitRatios
          required: false
          type: boolean
          in: formData
          description: 'Can user view ratio of his solution memory and time usages and assignment limits?'
      responses:
        200:
          $ref: '#/responses/AssignmentResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
    delete:
      tags:
        - assignments
      description: 'Delete an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment to be removed'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}/can-submit':
    get:
      tags:
        - assignments
      description: 'Check if the current user can submit solutions to the assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}/users/{userId}/submissions':
    get:
      tags:
        - assignments
      description: 'Get a list of solutions submitted by a user of an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/SubmissionListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  '/exercise-assignments/{id}/submit':
    post:
      tags:
        - assignments
      description: 'Submit a solution of an assignment'
      parameters:
        -
          name: note
          required: false
          type: string
          in: formData
          description: 'A private note by the author of the solution'
        -
          name: files
          required: false
          type: array
          items:
            type: string
            format: guid
          in: formData
          description: 'Submitted files'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
        -
          name: runtimeConfigurationId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of the runtime configuration used for evaluation'
        -
          name: userId
          in: formData
          required: false
          description: 'Author of the submission'
      responses:
        200:
          $ref: '#/responses/AssignmentSubmissionResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
  /groups:
    get:
      description: 'Get a list of all groups'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Create a new group'
      parameters:
        -
          name: name
          required: false
          type: string
          in: formData
          description: 'Name of the group'
          minLength: 2
        -
          name: description
          required: false
          type: string
          in: formData
          description: 'Description of the group'
        -
          name: instanceId
          required: false
          type: string
          format: guid
          in: formData
          description: 'An identifier of the instance where the group should be created'
          minLength: 36
          maxLength: 36
        -
          name: parentGroupId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of the parent group (if none is given, a top-level group is created)'
          minLength: 36
          maxLength: 36
        -
          name: publicStats
          required: false
          type: boolean
          in: formData
          description: 'Should students be able to see each other''s results?'
        -
          name: isPublic
          required: false
          type: boolean
          in: formData
          description: 'Should the group be visible to all student?'
        -
          name: externalId
          in: formData
          required: false
          description: 'An informative, human readable indentifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  /groups/validate-add-group-data:
    post:
      description: 'Validate group creation data'
      parameters:
        -
          name: name
          required: false
          type: string
          in: formData
          description: 'Name of the group'
        -
          name: instanceId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of the instance where the group belongs'
        -
          name: parentGroupId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of the parent group'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}':
    get:
      description: 'Get details of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Delete a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update group info'
      parameters:
        -
          name: name
          in: formData
          required: false
          type: string
          minLength: 2
          description: 'Name of the group'
        -
          name: description
          in: formData
          required: false
          type: string
          description: 'Description of the group'
        -
          name: publicStats
          in: formData
          required: false
          type: boolean
          description: 'Should students be able to see each other''s results?'
        -
          name: isPublic
          in: formData
          required: false
          type: boolean
          description: 'Should the group be visible to all student?'
        -
          name: threshold
          in: formData
          required: false
          type: integer
          description: 'A minimum percentage of points needed to pass the course'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the updated group'
        -
          name: externalId
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'An informative, human readable indentifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - groups
  '/groups/{id}/subgroups':
    get:
      description: 'Get a list of subgroups of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/members':
    get:
      description: 'Get a list of members of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/students':
    get:
      description: 'Get a list of students in a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/students/stats':
    get:
      description: 'Get statistics of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupStatsResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/students/{userId}':
    get:
      description: 'Get statistics of a single student in a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the student'
      responses:
        200:
          $ref: '#/responses/StudentStatsResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Add a student to a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the student'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Remove a student from a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the student'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/supervisors':
    get:
      description: 'Get a list of supervisors in a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/supervisors/{userId}':
    post:
      description: 'Add a supervisor to a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the supervisor'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Remove a supervisor from a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
        -
          name: userId
          required: true
          in: path
          type: string
          description: 'Identifier of the supervisor'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/admin':
    get:
      description: 'Get identifiers of administrators of a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/AdminIdListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
    post:
      description: 'Make a user an administrator of a group'
      parameters:
        -
          name: userId
          required: false
          type: string
          format: guid
          in: formData
          description: 'Identifier of a user to be made administrator'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/GroupResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  '/groups/{id}/assignments':
    get:
      description: 'Get all exercise assignments for a group'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the group'
      responses:
        200:
          $ref: '#/responses/AssignmentListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - groups
      security:
        -
          WebToken: [ ]
  /instances:
    get:
      description: 'Get a list of all instances'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/InstanceListResponse'
      tags:
        - instances
    post:
      description: 'Create a new instance'
      parameters:
        -
          name: name
          required: false
          type: string
          in: formData
          description: 'Name of the instance'
          minLength: 2
        -
          name: description
          required: false
          type: string
          in: formData
          description: 'Description of the instance'
        -
          name: isOpen
          required: false
          type: boolean
          in: formData
          description: 'Should the instance be open for registration?'
      responses:
        200:
          $ref: '#/responses/InstanceResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}':
    get:
      description: 'Get details of an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/InstanceResponse'
      tags:
        - instances
    delete:
      description: 'Delete an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance to be deleted'
      responses:
        200:
          $ref: '#/responses/DeleteResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update an instance'
      parameters:
        -
          name: name
          required: false
          type: string
          minLength: 2
          in: formData
          description: 'Name of the instance'
        -
          name: description
          required: false
          in: formData
          description: 'Description of the instance'
        -
          name: isOpen
          required: false
          type: boolean
          in: formData
          description: 'Should the instance be open for registration?'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the updated instance'
      responses:
        200:
          $ref: '#/responses/InstanceResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}/groups':
    get:
      description: 'Get a list of groups in an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}/users':
    get:
      description: 'Get a list of users registered in an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
        -
          name: search
          required: false
          in: query
          type: string
          description: 'A result filter'
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}/licences':
    get:
      description: 'Get a list of licenses associated with an instance'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/LicenceListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
    post:
      description: 'Create a new license for an instance'
      parameters:
        -
          name: note
          required: false
          type: string
          in: formData
          description: 'A note for users or administrators'
          minLength: 2
        -
          name: validUntil
          required: false
          type: string
          in: formData
          description: 'Expiration date of the license'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'An identifier of the instance'
      responses:
        200:
          $ref: '#/responses/LicenceResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/instances/{id}/licences/{licenceId}':
    put:
      tags:
        - instances
    delete:
      tags:
        - instances
  '/reference-solutions/{id}':
    get:
      description: 'Get reference solutions for an exercise'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the exercise'
      responses:
        200:
          $ref: '#/responses/ReferenceSolutionListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
    post:
      description: 'Add new reference solution to an exercise'
      parameters:
        -
          name: note
          required: false
          type: string
          in: formData
          description: 'Description of this particular reference solution, for example used algorithm'
        -
          name: files
          required: false
          in: formData
          description: 'Files of the reference solution'
        -
          name: runtime
          required: false
          in: formData
          description: 'ID of runtime for this solution'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the exercise'
      responses:
        200:
          $ref: '#/responses/ReferenceSolutionResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
  '/reference-solutions/{exerciseId}/evaluate/{id}':
    post:
      description: 'Evaluate reference solutions to an exercise for a hardware group'
      parameters:
        -
          name: hwGroup
          required: false
          type: string
          in: formData
          description: 'Identififer of a hardware group'
        -
          name: exerciseId
          required: true
          in: path
          type: string
          description: 'Identifier of the exercise'
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the reference solution'
      responses:
        200:
          $ref: '#/responses/ReferenceSolutionEvaluationResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - reference-exercise-solutions
  /submissions:
    get:
      description: 'Get a list of all submissions, ever'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/SubmissionListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - submissions
      security:
        -
          WebToken: [ ]
  '/submissions/{id}':
    get:
      description: 'Get information about the evaluation of a submission'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the submission'
      responses:
        200:
          $ref: '#/responses/SubmissionResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - submissions
      security:
        -
          WebToken: [ ]
    post:
      description: 'Set new amount of bonus points for a submission'
      parameters:
        -
          name: bonusPoints
          in: formData
          required: false
          type: integer
          description: 'New amount of bonus points, can be negative number'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'Identifier of the submission'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submissions
  /uploaded-files:
    post:
      description: 'Upload a file'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/UploadedFileResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  '/uploaded-files/{id}':
    get:
      description: 'Get details of a file'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the uploaded file'
      responses:
        200:
          $ref: '#/responses/UploadedFileResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  '/uploaded-files/{id}/download':
    get:
      description: 'Download a file'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the file'
      responses:
        200:
          $ref: '#/responses/FileDownloadResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  '/uploaded-files/{id}/content':
    get:
      description: 'Get the contents of a file'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the file'
      responses:
        200:
          $ref: '#/responses/PlainTextResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - uploaded-files
      security:
        -
          WebToken: [ ]
  /users:
    get:
      description: 'Get a list of all users'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/UserListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - users
    post:
      description: 'Create a user account'
      parameters:
        -
          name: email
          required: false
          type: string
          in: formData
          description: 'An email that will serve as a login name'
          format: email
        -
          name: firstName
          required: false
          type: string
          in: formData
          description: 'First name'
          minLength: 2
        -
          name: lastName
          required: false
          type: string
          in: formData
          description: 'Last name'
          minLength: 2
        -
          name: password
          required: false
          type: string
          in: formData
          description: 'A password for authentication'
          minLength: 1
        -
          name: instanceId
          required: false
          type: string
          in: formData
          description: 'Identifier of the instance to register in'
          minLength: 1
        -
          name: degreesBeforeName
          required: false
          type: string
          minLength: 1
          in: formData
          description: 'Degrees which is placed before user name'
        -
          name: degreesAfterName
          required: false
          type: string
          minLength: 1
          in: formData
          description: 'Degrees which is placed after user name'
      responses:
        200:
          $ref: '#/responses/UserResponse'
      tags:
        - users
  /users/ext:
    post:
      description: 'Create an account authenticated with an external service'
      parameters:
        -
          name: username
          required: false
          type: string
          in: formData
          description: 'Login name'
          minLength: 2
        -
          name: password
          required: false
          type: string
          in: formData
          description: 'Authentication password'
          minLength: 1
        -
          name: instanceId
          required: false
          type: string
          in: formData
          description: 'Identifier of the instance to register in'
          minLength: 1
        -
          name: serviceId
          required: false
          type: string
          in: formData
          description: 'Identifier of the authentication service'
          minLength: 1
      responses:
        200:
          $ref: '#/responses/UserResponse'
      tags:
        - users
  /users/validate-registration-data:
    post:
      description: 'Check if the registered E-mail isn''t already used and if the password is strong enough'
      parameters:
        -
          name: email
          required: false
          type: string
          format: email
          in: formData
          description: 'E-mail address (login name)'
        -
          name: password
          required: false
          type: string
          format: password
          in: formData
          description: 'Authentication password'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
      tags:
        - users
  '/users/{id}':
    get:
      description: 'Get details of a user account'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/UserResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
    post:
      description: 'Update the profile associated with a user account'
      parameters:
        -
          name: email
          in: formData
          required: false
          type: string
          format: email
          description: 'E-mail address'
        -
          name: firstName
          in: formData
          required: false
          type: string
          minLength: 2
          description: 'First name'
        -
          name: lastName
          in: formData
          required: false
          type: string
          minLength: 2
          description: 'Last name'
        -
          name: degreesBeforeName
          in: formData
          required: false
          description: 'Degrees before name'
        -
          name: degreesAfterName
          in: formData
          required: false
          description: 'Degrees after name'
        -
          name: oldPassword
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'Old password of current user'
        -
          name: password
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'Old password of current user'
        -
          name: newPassword
          in: formData
          required: false
          type: string
          minLength: 1
          description: 'New password of current user'
      responses:
        200:
          $ref: '#/responses/UserResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - users
  '/users/{id}/groups':
    get:
      description: 'Get a list of groups for a user'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/GroupListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
  '/users/{id}/instances':
    get:
      description: 'Get a list of instances where a user is registered'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/InstanceListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
  '/users/{id}/exercises':
    get:
      description: 'Get a list of exercises authored by a user'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the user'
      responses:
        200:
          $ref: '#/responses/ExerciseListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
  /users/detail:
    post:
      description: 'Update the profile associated with a user account'
      parameters:
        -
          name: email
          required: false
          type: string
          in: formData
          description: 'E-mail address'
          format: email
        -
          name: firstName
          required: false
          type: string
          in: formData
          description: 'First name'
          minLength: 2
        -
          name: lastName
          required: false
          type: string
          in: formData
          description: 'Last name'
          minLength: 2
        -
          name: degreesBeforeName
          required: false
          type: string
          in: formData
          description: 'Degrees before name'
          minLength: 1
        -
          name: degreesAfterName
          required: false
          type: string
          in: formData
          description: 'Degrees after name'
          minLength: 1
        -
          name: oldPassword
          required: false
          type: string
          format: password
          minLength: 1
          in: formData
          description: 'Old password of current user'
        -
          name: password
          required: false
          type: string
          format: password
          minLength: 1
          in: formData
          description: 'New password of current user'
      responses:
        200:
          $ref: '#/responses/UserResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - users
      security:
        -
          WebToken: [ ]
  /forgotten-password:
    post:
      description: 'Request a password reset (user will receive an e-mail that prompts them to reset their password)'
      parameters:
        -
          name: username
          required: false
          type: string
          in: formData
          description: 'An identifier of the user whose password should be reset'
          minLength: 2
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - forgotten-password
  /forgotten-password/change:
    post:
      description: 'Change the user''s password'
      parameters:
        -
          name: password
          required: false
          type: string
          format: password
          in: formData
          description: 'The new password'
          minLength: 2
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      tags:
        - forgotten-password
      security:
        -
          WebToken: [ ]
  /forgotten-password/validate-password-strength:
    post:
      description: 'Check if a password is strong enough'
      parameters:
        -
          name: password
          required: false
          type: string
          format: password
          in: formData
          description: 'The password to be checked'
      responses:
        200:
          $ref: '#/responses/BooleanResponse'
      tags:
        - forgotten-password
  '/exercise-assignments/{id}/limits':
    get:
      description: 'Get a description of resource limits for an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the exercise'
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - assignments
      security:
        -
          WebToken: [ ]
    post:
      description: 'Set resource limits for an assignment'
      parameters:
        -
          name: id
          required: true
          in: path
          type: string
          description: 'Identifier of the assignment'
        -
          name: environments
          required: false
          in: formData
          description: 'A list of resource limits for the environments and hardware groups'
          type: array
          items:
            type: string
      responses:
        200: {  }
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - assignments
      security:
        -
          WebToken: [ ]
  '/instances/licences/{licenceId}':
    post:
      description: 'Update an existing license for an instance'
      parameters:
        -
          name: note
          required: false
          type: string
          minLength: 2
          in: formData
          description: 'A note for users or administrators'
        -
          name: validUntil
          required: false
          type: string
          in: formData
          description: 'Expiration date of the license'
        -
          name: isValid
          required: false
          type: boolean
          in: formData
          description: 'Administrator switch to toggle licence validity'
        -
          name: licenceId
          required: true
          in: path
          type: string
          description: 'Identifier of the licence'
      responses:
        200:
          $ref: '#/responses/LicenceResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
    delete:
      description: 'Remove existing license for an instance'
      parameters:
        -
          name: licenceId
          required: true
          in: path
          type: string
          description: 'Identifier of the licence'
      responses:
        200:
          $ref: '#/responses/SuccessResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - instances
      security:
        -
          WebToken: [ ]
  '/exercises/{id}/supplementary-files':
    post:
      description: 'Associate supplementary files with an exercise and upload them to remote file server'
      parameters:
        -
          name: files
          required: false
          in: formData
          description: 'Identifiers of supplementary files'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/UploadedFileListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
    get:
      description: 'Get list of all supplementary files for an exercise'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/UploadedFileListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  '/exercises/{id}/runtime-configs':
    post:
      description: "Change runtime configuration of exercise.\nConfigurations can be added or deleted here, based on what is provided in arguments."
      parameters:
        -
          name: runtimeConfigs
          required: false
          in: formData
          description: 'Runtime configurations for the exercise'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'identification of exercise'
      responses:
        200:
          $ref: '#/responses/ExerciseResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - exercises
  /submission-failures:
    get:
      description: 'List all submission failures, ever'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/SubmissionFailureListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  /submission-failures/unresolved:
    get:
      description: 'List all unresolved submission failures'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/SubmissionFailureListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/submission-failures/submission/{id}':
    get:
      description: 'List all failures of a single submission'
      parameters:
        -
          name: submissionId
          in: path
          required: true
          type: string
          description: 'An identifier of the submission'
      responses:
        200:
          $ref: '#/responses/SubmissionFailureListResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/submission-failures/{id}':
    get:
      description: 'Get details of a failure'
      parameters:
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the failure'
      responses:
        200:
          $ref: '#/responses/SubmissionFailureResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/submission-failures/{id}/resolve':
    post:
      description: 'Mark a submission failure as resolved'
      parameters:
        -
          name: note
          in: formData
          required: false
          type: string
          maxLength: 255
          description: 'Brief description of how the failure was resolved'
        -
          name: id
          in: path
          required: true
          type: string
          description: 'An identifier of the failure'
      responses:
        200:
          $ref: '#/responses/SubmissionFailureResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - submission-failures
  '/users/{id}/settings':
    post:
      description: 'Update the profile settings'
      parameters:
        -
          name: darkTheme
          in: formData
          required: false
          type: boolean
          description: 'Flag if dark theme is used'
        -
          name: vimMode
          in: formData
          required: false
          type: boolean
          description: 'Flag if vim keybinding is used'
        -
          name: defaultLanguage
          in: formData
          required: false
          type: string
          description: 'Default language of UI'
      responses:
        200:
          $ref: '#/responses/UserSettingsResponse'
        401:
          $ref: '#/responses/UnauthorizedResponse'
      security:
        -
          WebToken: [ ]
      tags:
        - users
  /runtime-environments:
    get:
      description: 'Get a list of all runtime environments'
      parameters: [ ]
      responses:
        200:
          $ref: '#/responses/RuntimeEnvironmentListResponse'
        403:
          $ref: '#/responses/ForbiddenResponse'
      tags:
        - runtime-environments
responses:
  BooleanResponse:
    description: 'A boolean value'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: boolean
              example: true
  InstanceResponse:
    description: 'An instance object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Instance'
  InstanceListResponse:
    description: 'A list of instances'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Instance'
  LicenceResponse:
    description: 'A licence object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Licence'
  LicenceListResponse:
    description: 'A list of licences'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Licence'
  UserResponse:
    description: 'Details of a user'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/User'
  UserListResponse:
    description: 'A list of users'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/User'
  GroupResponse:
    description: 'A group object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Group'
  GroupListResponse:
    description: 'A list of groups'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Group'
  ExerciseResponse:
    description: 'An exercise object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Exercise'
  ExerciseListResponse:
    description: 'A list of exercises'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Exercise'
  AssignmentListResponse:
    description: 'A list of assignments'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Assignment'
  AssignmentResponse:
    description: 'An assignment object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Assignment'
  CommentResponse:
    description: 'A comment object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Comment'
  CommentThreadResponse:
    description: 'A comment thread object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/CommentThread'
  SubmissionResponse:
    description: 'A submission object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/Submission'
  SubmissionListResponse:
    description: 'A list of submissions'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/Submission'
  AssignmentSubmissionResponse:
    description: 'Information about submission'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                webSocketChannel:
                  type: object
                  properties: { id: { type: string }, monitorUrl: { type: string }, expectedTasksCount: { type: integer, example: 42 } }
                submission:
                  $ref: '#/definitions/Submission'
  ReferenceSolutionEvaluationResponse:
    description: 'Information about evaluation'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                webSocketChannel:
                  type: object
                  properties: { id: { type: string }, monitorUrl: { type: string }, expectedTasksCount: { type: integer, example: 42 } }
                evaluation:
                  $ref: '#/definitions/ReferenceSolutionEvaluation'
  UploadedFileResponse:
    description: 'An uploaded file object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/SolutionFile'
  UploadedFileListResponse:
    description: 'A list of uploaded file objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/SolutionFile'
  LoginResponse:
    description: 'Access token and user information'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: object
              properties:
                accessToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
                user:
                  $ref: '#/definitions/Assignment'
  FileDownloadResponse:
    description: 'A file download'
    schema:
      type: file
  PlainTextResponse:
    description: 'Plain text'
    schema:
      type: text
  GroupStatsResponse:
    description: 'List of statistics for each student'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/StudentStatisticsData'
  StudentStatsResponse:
    description: 'Statistics for a single student'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/StudentStatisticsData'
  AdminIdListResponse:
    description: 'A list of user identifiers'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                type: string
                format: guid
                example: 3A584DA0-564D-4E65-8284-DBA43566B03A
  ReferenceSolutionListResponse:
    description: 'A list of reference solutions'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/ReferenceExerciseSolution'
  ReferenceSolutionResponse:
    description: 'A reference solution object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/ReferenceExerciseSolution'
  SubmissionFailureResponse:
    description: 'A submission failure object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/SubmissionFailure'
  SubmissionFailureListResponse:
    description: 'A list of submission failure objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/SubmissionFailure'
  UserSettingsResponse:
    description: 'User settings object'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              $ref: '#/definitions/UserSettings'
  RuntimeEnvironmentListResponse:
    description: 'A list of runtime environment objects'
    schema:
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: array
              items:
                $ref: '#/definitions/RuntimeEnvironment'
  SuccessResponse:
    description: Success
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            payload:
              type: string
              example: OK
  CreatedResponseParams:
    properties:
      code:
        type: integer
        required: true
        example: 201
      success:
        type: boolean
        required: true
        example: true
  DeleteResponse:
    description: OK
    schema:
      type: object
      properties:
        code:
          type: integer
          required: true
        success:
          type: boolean
          required: true
        payload:
          type: string
          example: OK
  UnauthorizedResponse:
    description: 'Login required'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            msg:
              type: string
      example:
        msg: 'Forbidden Request - Login required'
        code: 401
        success: false
  ForbiddenResponse:
    description: 'Forbidden Request - Access denied'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            msg:
              type: string
      example:
        msg: 'Forbidden Request - Access denied'
        code: 403
        success: false
  BadRequestResponse:
    description: 'Bad Request'
    schema:
      type: object
      allOf:
        -
          $ref: '#/definitions/DefaultResponseParams'
        -
          type: object
          properties:
            msg:
              type: string
      example:
        msg: 'Bad Request - Missing required POST field'
        code: 400
        success: false
definitions:
  DefaultResponseParams:
    type: object
    properties:
      code:
        type: integer
        example: 200
      success:
        type: boolean
        example: true
  Assignment:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: A1EC9723-D200-4610-AF16-E4DF8707B0B4
      name:
        type: string
        example: 'Convex hull'
      isPublic:
        type: boolean
        example: true
      groupId:
        $ref: '#/definitions/Group/properties/id'
      deadline:
        type: object
        properties:
          first:
            type: integer
            example: 1530195253
          second:
            type: integer
            example: 1627097523
      submissionsCountLimit:
        type: integer
        example: 50
      canReceiveSubmissions:
        type: boolean
        example: false
      allowSecondDeadline:
        type: boolean
        example: false
      maxPoints:
        type: object
        properties:
          first:
            type: integer
            example: 0
          second:
            type: integer
            example: 0
      scoreConfig:
        type: string
        example: ''
      firstDeadline:
        type: integer
        example: 1555117901
      secondDeadline:
        type: integer
        example: 1597898766
      maxPointsBeforeFirstDeadline:
        type: integer
        example: 0
      maxPointsBeforeSecondDeadline:
        type: integer
        example: 0
      solutionRuntimeConfigs:
        type: array
        items:
          type: string
          example: D9FAB341-4562-459B-868A-C5872D2DE0BF
      canViewLimitRatios:
        type: boolean
        example: false
      localizedAssignments:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 78854480-8B0F-4CB6-B901-FEF25187148D
            name:
              type: string
              example: 'Convex hull - desc'
            locale:
              type: string
              example: en
            description:
              type: string
              example: 'A true classic'
            createdFrom:
              type: string
              example: ''
            createdAt:
              type: integer
              example: 1479915729
  Group:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: D39E10C2-B3CE-4286-95D9-EBB30A118541
      name:
        type: string
        example: 'Demo group'
      description:
        type: string
        example: 'A group meant solely for the purpose of demonstration'
      adminId:
        type: string
        format: guid
        example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      admins:
        type: array
        items:
          type: string
          format: guid
          example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      supervisors:
        type: array
        items:
          type: string
          format: guid
          example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      students:
        type: array
        items:
          type: string
          format: guid
          example: 06ACD9C9-93F1-48D2-9689-E9620DE30690
      instanceId:
        type: string
        format: guid
        example: 63581D3B-440C-4190-9042-2B16BFD5BA6B
      hasValidLicence:
        type: boolean
        example: true
      parentGroupId:
        type: string
        format: guid
        example: 0cf3b440-5531-3122-b091-4de13f15652d
      assignments:
        type: object
        items:
          type: string
          format: guid
          example: 3E2A7CE3-AA73-4D32-9B7A-66C7E97AC401
        properties:
          all:
            type: array
            items:
              type: string
              example: A1EC9723-D200-4610-AF16-E4DF8707B0B4
          public:
            type: array
            items:
              type: string
              example: A1EC9723-D200-4610-AF16-E4DF8707B0B4
      publicStats:
        type: boolean
        example: true
      isPublic:
        type: boolean
        example: true
      childGroups:
        type: object
        items:
          type: string
          example: B2160429-C3C9-42D5-A026-00BB5ADF3FB5
        properties:
          all:
            type: array
            items:
              type: string
              example: CA6C146E-3973-4D6E-B051-A13C6584E9BE
          public:
            type: array
            items:
              type: string
              example: CA6C146E-3973-4D6E-B051-A13C6584E9BE
      threshold:
        type: float
        example: 0.75
      externalId:
        type: string
        example: NPRG031
  Instance:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: 63581D3B-440C-4190-9042-2B16BFD5BA6B
      name:
        type: string
        example: 'Frankenstein University, Atlantida'
      description:
        type: string
        example: 'First underwater IT university for fish and shrimps.'
      hasValidLicence:
        type: boolean
        example: true
      isOpen:
        type: boolean
        example: true
      createdAt:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1479915728
      updatedAt:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1479915728
      isAllowed:
        type: boolean
        example: true
      admin:
        type: string
        format: guid
        example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      topLevelGroups:
        type: array
        items:
          type: string
          example: D39E10C2-B3CE-4286-95D9-EBB30A118541
      deletedAt:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1479893977
  Licence:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: BC4AB7A2-6473-43AA-AAD9-A03ABE37F91C
      note:
        type: string
        example: 'Year licence for the first Fish University'
      isValid:
        type: boolean
        example: true
      validUntil:
        type: integer
        format: int64
        description: 'UNIX timestamp'
        example: 1607557032
  User:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      fullName:
        type: string
        example: 'Adah Reichel'
      name:
        type: object
        properties:
          degreesBeforeName:
            type: string
            example: ''
          firstName:
            type: string
            example: Adah
          lastName:
            type: string
            example: Reichel
          degreesAfterName:
            type: string
            example: ''
      instanceId:
        type: string
        format: guid
        example: 63581D3B-440C-4190-9042-2B16BFD5BA6B
      avatarUrl:
        type: string
        example: 'https://secure.gravatar.com/avatar/64e1b8d34f425d19e1ee2ea7236d3028.png?s=200&amp;d=retro&amp;r=g'
      isVerified:
        description: 'Is the user verified by email?'
        type: boolean
        example: false
      role:
        type: string
        format: guid
        example: superadmin
      groups:
        type: object
        properties:
          studentOf:
            type: array
            items:
              type: string
              example: aa07c86a-df37-327b-8bd9-b97fdfd66161
          supervisorOf:
            type: array
            items:
              type: string
              example: D39E10C2-B3CE-4286-95D9-EBB30A118541
      settings:
        type: object
        properties:
          darkTheme:
            type: boolean
            example: true
          vimMode:
            type: boolean
            example: false
          defaultLanguage:
            type: string
            example: en
  Exercise:
    type: object
    properties:
      id:
        type: string
        format: guid
        example: F73FBEB6-878E-4F1A-8FC7-701068609532
      name:
        type: string
        example: 'Convex hull'
      version:
        type: integer
        example: 1
      authorId:
        type: string
        format: guid
        example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      forkedFrom:
        type: string
        format: guid
        example: ed6eef24-6b1f-3781-b9d3-625d82830ec1
      description:
        type: string
        example: 'A true classic'
      difficulty:
        type: string
        example: moderate
      localizedAssignments:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 78854480-8B0F-4CB6-B901-FEF25187148D
            name:
              type: string
              example: 'Convex hull - desc'
            locale:
              type: string
              example: en
            description:
              type: string
              example: 'A true classic'
            createdFrom:
              type: string
              example: ''
            createdAt:
              type: integer
              example: 1479915729
      solutionRuntimeConfigs:
        type: array
        items:
          type: object
          example: 8CD78B71-F741-448F-8D35-A75DF89F50F3
          properties:
            id:
              type: string
              example: D9FAB341-4562-459B-868A-C5872D2DE0BF
            name:
              type: string
              example: 'A demo runtime config'
            jobConfig:
              type: boolean
              example: false
            runtimeEnvironment:
              type: object
              properties:
                id:
                  type: string
                  example: c-gcc-linux
                name:
                  type: string
                  example: 'C (GCC)'
                language:
                  type: string
                  example: C
                extensions:
                  type: string
                  example: '[c, h]'
                platform:
                  type: string
                  example: GNU/Linux
                description:
                  type: string
                  example: 'C compiled with GCC'
            createdAt:
              type: integer
              example: 1479915729
            runtimeEnvironmentId:
              type: string
              example: c-gcc-linux
      isPublic:
        type: boolean
        example: true
      createdAt:
        type: integer
        example: 1479915729
      updatedAt:
        type: integer
        example: 1479915729
  Role:
    type: string
    example: student
  Resource:
    type: string
    example: assignments
  Permission:
    type: object
    properties:
      role:
        type: string
        format: guid
        example: superadmin
      resource:
        type: string
        format: guid
        example: assignments
      action:
        type: string
        example: '*'
      isAllowed:
        type: integer
        example: 1
  LocalizedAssignmentParam:
    type: object
    properties:
      locale:
        type: string
        example: en_US
      name:
        type: string
        example: 'Your assignment'
      description:
        type: string
        example: 'This is your assignment!'
  CommentThread:
    type: object
    properties:
      id:
        type: string
        example: mainThread
      comments:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: F65D1247-DF5B-41D3-8139-D8F012D08665
            commentThreadId:
              type: string
              example: mainThread
            user:
              type: object
              properties:
                id:
                  type: string
                  example: A2DE8FC1-6C4B-4CB7-AE17-B50740FA7C4C
                name:
                  type: string
                  example: 'Zetta Stroman'
                avatarUrl:
                  type: string
                  example: 'https://secure.gravatar.com/avatar/111d68d06e2d317b5a59c2c6c5bad808.png?s=200&amp;d=retro&amp;r=g'
            postedAt:
              type: integer
              example: 1479915729
            isPrivate:
              type: boolean
              example: true
            text:
              type: string
              example: 'comment text'
  Comment:
    type: object
    properties:
      id:
        type: string
        example: F65D1247-DF5B-41D3-8139-D8F012D08665
      commentThreadId:
        type: string
        example: mainThread
      user:
        type: object
        properties:
          id:
            type: string
            example: A2DE8FC1-6C4B-4CB7-AE17-B50740FA7C4C
          name:
            type: string
            example: 'Zetta Stroman'
          avatarUrl:
            type: string
            example: 'https://secure.gravatar.com/avatar/111d68d06e2d317b5a59c2c6c5bad808.png?s=200&amp;d=retro&amp;r=g'
      postedAt:
        type: integer
        example: 1479915729
      isPrivate:
        type: boolean
        example: true
      text:
        type: string
        example: 'comment text'
  RuntimeEnvironment:
    type: object
    properties:
      id:
        type: string
        example: c-gcc-linux
      name:
        type: string
        example: 'C (GCC)'
      language:
        type: string
        example: C
      extensions:
        type: string
        example: '[c, h]'
      platform:
        type: string
        example: GNU/Linux
      description:
        type: string
        example: 'C compiled with GCC'
  HardwareGroup:
    type: object
    properties:
      id:
        type: string
        example: group1
      description:
        type: string
        example: 'Our only hardware group'
  SolutionRuntimeConfig:
    type: object
    properties:
      id:
        type: string
        example: D9FAB341-4562-459B-868A-C5872D2DE0BF
      name:
        type: string
        example: 'A demo runtime config'
      hardwareGroup:
        type: string
        example: dd2a7c4f-68ed-3b61-85ae-13dd1de31671
      runtimeEnvironment:
        type: object
        properties:
          id:
            type: string
            example: c-gcc-linux
          name:
            type: string
            example: 'C (GCC)'
          language:
            type: string
            example: C
          extensions:
            type: string
            example: '[c, h]'
          platform:
            type: string
            example: GNU/Linux
          description:
            type: string
            example: 'C compiled with GCC'
      jobConfig:
        type: boolean
        example: false
      createdAt:
        type: integer
        example: 1479915729
      runtimeEnvironmentId:
        type: string
        example: c-gcc-linux
  Submission:
    type: object
    properties:
      id:
        type: string
        example: 5936A4B4-623B-4E47-AB95-9DEF514784A0
      userId:
        type: string
        example: 07FBCF18-7517-4E79-9055-A136A32BF47E
      note:
        type: string
        example: 'Random note'
      exerciseAssignmentId:
        type: string
        example: A1EC9723-D200-4610-AF16-E4DF8707B0B4
      submittedAt:
        type: integer
        example: 1479915729
      evaluationStatus:
        type: string
        example: evaluation-failed
      evaluation:
        type: object
        example: 69f0f87c-3158-3a33-941f-e4b1ec4a0a93
        properties:
          id:
            type: string
            example: 9C5E7C2B-F619-4CFD-901B-3BE5633C6BC0
          evaluatedAt:
            type: integer
            example: 248377083
          score:
            type: double
            example: 0.95
          points:
            type: integer
            example: 10
          bonusPoints:
            type: integer
            example: 1
          initFailed:
            type: boolean
            example: false
          isValid:
            type: boolean
            example: true
          isCorrect:
            type: boolean
            example: true
          evaluationFailed:
            type: boolean
            example: false
          testResults:
            type: array
            items: {  }
      maxPoints:
        type: integer
        example: 0
      files:
        type: array
        items:
          type: object
          example: 69f0f87c-3158-3a33-941f-e4b1ec4a0a93
          properties:
            id:
              type: string
              example: B4AE290C-3E35-4037-991C-7E5F2A0598B1
            name:
              type: string
              example: filename.ext
            size:
              type: integer
              example: 0
            uploadedAt:
              type: integer
              example: 1296982082
            userId:
              type: string
              example: 07FBCF18-7517-4E79-9055-A136A32BF47E
      submittedBy:
        type: string
        example: 07FBCF18-7517-4E79-9055-A136A32BF47E
  LocalizedAssignment:
    type: object
    properties:
      id:
        type: string
        example: 78854480-8B0F-4CB6-B901-FEF25187148D
      name:
        type: string
        example: 'Convex hull - desc'
      locale:
        type: string
        example: en
      description:
        type: string
        example: 'A true classic'
      createdFrom:
        type: string
        format: guid
        example: ''
      createdAt:
        type: integer
        example: 1479915729
  SolutionEvaluation:
    type: object
    properties:
      id:
        type: string
        example: 9C5E7C2B-F619-4CFD-901B-3BE5633C6BC0
      evaluatedAt:
        type: integer
        example: 248377083
      score:
        type: double
        example: 0.95
      points:
        type: integer
        example: 10
      bonusPoints:
        type: integer
        example: 1
      initFailed:
        type: boolean
        example: false
      isValid:
        type: boolean
        example: true
      isCorrect:
        type: boolean
        example: true
      evaluationFailed:
        type: boolean
        example: false
      testResults:
        type: array
        items: {  }
  Solution:
    type: object
    properties:
      id:
        type: string
        example: 9AE81636-BC49-442A-B441-A01FA43860B8
      userId:
        type: string
        example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      files:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 8F3935F3-265A-4084-A404-B9D4CF054766
            name:
              type: string
              example: filename.ext
            size:
              type: integer
              example: 0
            uploadedAt:
              type: integer
              example: 1296968863
            userId:
              type: string
              example: 03158369-EE1C-4935-A110-16689F167368
  SolutionFile:
    type: object
    properties:
      id:
        type: string
        example: B4AE290C-3E35-4037-991C-7E5F2A0598B1
      name:
        type: string
        example: filename.ext
      size:
        type: integer
        example: 0
      uploadedAt:
        type: integer
        example: 1296982082
      userId:
        type: string
        example: 07FBCF18-7517-4E79-9055-A136A32BF47E
  SubmissionFailure:
    type: object
    properties:
      type:
        type: string
        example: evaluation_failure
      description:
        type: string
        example: 'Things went south'
      submission:
        type: string
        example: 5936A4B4-623B-4E47-AB95-9DEF514784A0
      createdAt:
        type: integer
        example: 1323942473
      resolvedAt:
        type: integer
        example: 1479915729
      resolutionNote:
        type: string
        example: 'Got it!'
  StudentStatisticsData:
    type: object
    properties:
      userId:
        type: string
        example: 3A584DA0-564D-4E65-8284-DBA43566B03A
      groupId:
        type: string
        example: 3A584DA0-564D-4E65-8284-DBA43566B03A
      assignments:
        type: object
        properties:
          total:
            type: integer
            example: 10
          completed:
            type: integer
            example: 3
          missed:
            type: integer
            example: 7
      points:
        type: object
        properties:
          total:
            type: integer
            example: 42
          received:
            type: integer
            example: 12
      statuses:
        type: object
        example:
          3A584DA0-564D-4E65-8284-DBA43566B03A: done
          FB584DA0-564D-4E65-8284-DBA43566B03A: failed
      hasLimit:
        type: boolean
        example: false
      passesLimit:
        type: boolean
        example: false
  ReferenceExerciseSolution:
    type: object
    properties:
      id:
        type: string
        example: 8711F7E9-A13C-42FA-800E-A54911D514C6
      uploadedAt:
        type: integer
        example: 1479915729
      description:
        type: string
        example: 'Brute force solution'
      solution:
        type: object
        properties:
          id:
            type: string
            example: 9AE81636-BC49-442A-B441-A01FA43860B8
          userId:
            type: string
            example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
          files:
            type: array
            items:
              type: string
              example: F019B9EF-4216-4806-9729-2C7D97A20549
      evaluations:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: C20AE2E6-06CB-4F82-BAB1-0AFC5658EC21
            referenceSolutionId:
              type: string
              example: 8711F7E9-A13C-42FA-800E-A54911D514C6
            evaluationStatus:
              type: string
              example: evaluation-failed
            evaluation:
              type: string
              example: 3684A998-4274-4F3D-B7A0-2FC31D5F1486
  ReferenceSolutionEvaluation:
    type: object
    properties:
      id:
        type: string
        example: C20AE2E6-06CB-4F82-BAB1-0AFC5658EC21
      referenceSolutionId:
        type: string
        example: 8711F7E9-A13C-42FA-800E-A54911D514C6
      evaluationStatus:
        type: string
        example: evaluation-failed
      evaluation:
        type: string
        example: 3684A998-4274-4F3D-B7A0-2FC31D5F1486
  GroupMembership:
    type: object
    properties:
      id:
        type: string
        example: 9877538E-C8CF-4A92-AC93-9C9B1F0005B4
      userId:
        type: string
        example: 74FAEBA8-D6A0-49EB-AF7B-658A4C34B695
      groupId:
        type: string
        example: D39E10C2-B3CE-4286-95D9-EBB30A118541
      status:
        type: string
        example: active
      requestedAt:
        type: 'NULL'
      joinedAt:
        type: object
        properties:
          date:
            type: string
            example: '2016-11-23 16:42:09.000000'
          timezone_type:
            type: integer
            example: 3
          timezone:
            type: string
            example: Europe/Prague
      rejectedAt:
        type: 'NULL'
      studentSince:
        type: 'NULL'
      supervisorSince:
        type: object
        properties:
          date:
            type: string
            example: '2016-11-23 16:42:09.000000'
          timezone_type:
            type: integer
            example: 3
          timezone:
            type: string
            example: Europe/Prague
  UserSettings:
    type: object
    properties:
      darkTheme:
        type: boolean
        example: true
      vimMode:
        type: boolean
        example: false
      defaultLanguage:
        type: string
        example: en
