#%RAML 1.0
title: ReCodEx REST API
version: v1
baseUri: http://api.recodex.cz
types:
  TestType:
    type: object
    properties:
      id: number
      optional?: string
      expanded:
        type: object
        properties:
          count: number

/users:
  get:
    description: Get the list of all users
  post:
    description: Add new user
  /{userId}:
    get:
      description: Get the user's details
    put:
      description: Update the user's details
    delete:
      description: Delete the user
    /logout:
      description: Make all active access tokens invalid
  /reset-password:
    description: Reset the password of the user with given password


/instances:
  get:
    description: Get the list of all instances
    queryParameters:
      valid:
        displayName: Valid
        description: Get only valid or invalid instances
        type: boolean
        required: false
      language:
        displayName: Language
        description: Get only instances with given language
        type: string
        minLength: 2
        maxLength: 2
        required: false
  post:
    description: Create a new instance for a separate institution
    queryParameters:
      name:
        displayName: Instance Name
        description: Name of the instance
        type: string
        example: MFF UK, Prague
      userId:
        displayName: Owner
        description: Owner of the instance
        type: string
        example: John Doe
      language:
        displayName: Language
        description: Default app language of the instance specified by the two letter standard [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1)
        type: string
        example: en
        minLength: 2
        maxLength: 2

  /{instanceId}:
    get:
      description: Get the instance details
    put:
      description: Update the instance details
    delete:
      description: Delete the instance and its groups

    /licences:
      get:
        description: Get the list of all licences of the instance
      post:
        description: Add a new licence to the instance

      /{licenceId}:
        put:
          description: Update the given licence of the instance
        delete:
          description: Delete the given licence of the instance

    /groups:
      get:
        description: Get the list of all groups of the instance

/groups:
  get:
    description: Get the list of all groups
    queryParameters:
      instanceId:
        displayName: Instance ID
        description: Get only groups of the instance with given
        required: false
  post:
    description: Create new group
    queryParameters:
      name:
      instanceId:
      externalId:
      parentGroupId:

  /{groupId}:
    get:
      description: Get the group details
    put:
      description: Update the group details
    delete:
      description: Delete group
    /users:
      get:
        description: Get all users of the group
      post:
        description: Add user to the group
      /{userId}:
        put:
          description: Update the role of the user in a group
        delete:
          description: Remove user from the group
