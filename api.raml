#%RAML 1.0
title: ReCodEx REST API
uses:
  Security: !include traits/security.raml
  Collections: !include traits/collections.raml
version: v1
protocols: [ HTTPS ]
baseUri: http://api.recodex.org/{version}
mediaType: application/json
securitySchemes:
  - oauth_2_0: !include securitySchemes/oauth_2_0.raml

securedBy: [ oauth_2_0 ]

/auth:
  description: Basic username + password authentication.
  securedBy: [ null ]
  /token:
    description: Generate or refresh an access token.
  /scope:
    get:
    post:
      description: Get

/instances:
  get:
    description: Get the list of all instances
    queryParameters:
      valid:
        displayName: Valid
        description: Get only valid or invalid instances
        type: boolean
        required: false
      language:
        displayName: Language
        description: Get only instances with given language
        type: string
        minLength: 2
        maxLength: 2
        required: false
  post:
    description: Create a new instance for a separate institution
    queryParameters:
      name:
        displayName: Instance Name
        description: Name of the instance
        type: string
        example: MFF UK, Prague
      userId:
        displayName: Owner
        description: Owner of the instance
        type: string
        example: John Doe
      language:
        displayName: Language
        description: Default app language of the instance specified by the two letter standard [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1)
        type: string
        example: en
        minLength: 2
        maxLength: 2

  /{instanceId}:
    get:
      description: Get the instance details
    put:
      description: Update the instance details
    delete:
      description: Delete the instance and its groups

    /licences:
      get:
        description: Get the list of all licences of the instance
      post:
        description: Add a new licence to the instance

      /{licenceId}:
        put:
          description: Update the given licence of the instance
        delete:
          description: Delete the given licence of the instance

    /groups:
      get:
        description: Get the list of all groups of the instance

/groups:
  get:
    description: Get the list of all groups
    queryParameters:
      instanceId:
        displayName: Instance ID
        description: Get only groups of the instance with given
        required: false
  post:
    description: Create new group
    queryParameters:
      name:
      instanceId:
      externalId:
      parentGroupId:

  /{groupId}:
    get:
      description: Get the group details
    put:
      description: Update the group details
    delete:
      description: Delete group
    /users:
      get:
        description: Get all users of the group
      post:
        description: Add user to the group
      /{userId}:
        put:
          description: Update the role of the user in a group
        delete:
          description: Remove user from the group

/users:
  get:
    is: [ Collections.pageable ]
    description: Get the list of all users.
  put:
    description: |
      Create new ReCodEx account or bind an existing account with
      another authentication service.

  /{userId}:
    get:
      description: Get details of a specific user.
      responses:
        200:
          displayName: Retrieve user's profile.
          description: The user's profile details.
          body:

    put:
      description: Update user's personal information.
    delete:
      description: Close user's account.

    /logins:
      get:
        description: Get the list of user's authentication methods.

      /{loginId}:
        put:
          description: Enable or disable an authentication method.
        delete:
          description: Disable an authentication method.

    /settings:
      description: User's settings.
      get:
        description: Get user's current settings.
      put:
        description: Change the settings of the user.

    /log:
      get:
        is: [ Collections.pageable ]
        description: Get the history of user's activities.

    /groups:
      get:
        is: [ Collections.pageable ]
        description: The list of groups into which the user belongs.

    /assignments:
      get:
        is: [ Collections.pageable ]
        description: The list of assignments for the user accross all groups.

    /submissions:
      get:
        is: [ Collections.pageable ]
        description: The history of user's assignments' submissions.

/tags:
  get:
  post:
  delete:

/configuration:
  /judges:
    get:
    post:
    delete:
  /programming-languages:
    get:
    post:
    put:
    delete:
  /hardware-groups:
    get:
    post:
    put:
    delete:

/exercises:
  get:
    description: Get list of all available exercises.
    is: [ Collections.pageable ]
  post:
    description: Create new exercise.
  /{exerciseId}:
    description: Details and configuration of an exercise.
    get:
      description: Detailed information about an exercise.
    delete:
      description: Delete an unncessary exercise.
    /instructions:
      description: Internationalized instructions for the exercise.
      get:
        description: |
          Get the list of all available language variants of
          the instructions and the instructions in the default language.
      post:
        description: Create instructions in a different language.
      /{lang}:
        get:
          description: Get instructions for the exercise in a specific language.
        put:
          description: Edit the instructions.
        delete:
          description: Delete instructions in a specific language.
    /configuration:
      description: |
        Configuration of the exercise can be fairly complicated and the author
        can create specific configuration for different programming languages
        or runtime environments.
      get:
        description: The list of all specific configurations.
      post:
        description: Create new configuration.
      /{configurationId}:
        get:
          description: Get details of the configuration.
        put:
          description: Change the configuration.
        delete:
          description: Delete unnecessary configuration.
      /automatic:
        description: |
          Automatic configuration of parameters based on performace of given
          sample solutions compiled and run in the ReCodEx environment.
        get:
          description: |
            List of all performed auto-configuration throughout the whole
            lifespan of the exercise.
        post:
          description: Perform new auto-configuration.
        /{automaticConfigurationId}:
          get:
            description: Auto-configuration results.
          delete:
            description: Remove unnecessary autoconfiguration log.
    /sample-solutions:
      description: |
        Solutions of the exercise submitted by the creator of the exercise.
        These samples should be used for verifying the assignment and configuration
        of the exercise.
      get:
        description: The list of submitted sample solutions.
      post:
        description: Submit new sample solution.
      /{sampleSolutionId}:
        get:
          description: Information about a sample solutoon.
        put:
          description: Update information about a sample solution.
        delete:
          description: Remove unnecessary sample solution.

/assignments:
  get:
    is: [ Collections.pageable, Security.admin ]
    description: |
      The list of all assignments througout the history of ReCodEx.
  post:
    description: Create a new assignment.
  /{assignmentId}:
    get:
      description: Get details of an assignment.
    put:
      description: Edit assignment settings.
    delete:
      description: Remove an assignment.
    /instructions:
      description: Internationalized instructions for the exercise.
      get:
        description: |
          Get the list of all available language variants of
          the instructions and the instructions in the default language.
      post:
        description: Create instructions in a different language.
      /{lang}:
        get:
          description: Get instructions for the exercise in a specific language.
        put:
          description: Edit the instructions.
        delete:
          description: Delete instructions in a specific language.
    /configuration:
      description: |
        Configuration of the assignment is based on the configuration
        of the exercise, but it can be extended or overriden with
        a more specific configuration.
      get:
        description: The list of all specific configurations.
      post:
        description: Create new configuration.
      /{configurationId}:
        get:
          description: Get details of the configuration.
        put:
          description: Change the configuration.
        delete:
          description: Delete unnecessary configuration.
    /submissions:
      get:
        description: The list of all submissions for this assignment.

/submissions:
  description: The submitted users' solutions for their assignments.
  get:
    description: The list of all submissions throughout the application.
    is: [ Collections.pageable]
  /{submissionId}:
    get:
      description: Details of the specific submission.
    delete:
      description: Remove an unncessary submission.
      is: [ Security.admin ]
    /evaluation:
      get:
        description: The evaluation of the submission.
      post:
        description: Publish the evaluation results of the submission.
